public final class tangle/viewmodel/compiler/TangleViewModelComponentGenerator : com/squareup/anvil/compiler/api/CodeGenerator {
	public fun <init> ()V
	public fun generateCode (Ljava/io/File;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Ljava/util/Collection;)Ljava/util/Collection;
	public fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}

public final class tangle/viewmodel/compiler/TangleViewModelSubcomponentGenerator : com/squareup/anvil/compiler/api/CodeGenerator {
	public fun <init> ()V
	public fun generateCode (Ljava/io/File;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Ljava/util/Collection;)Ljava/util/Collection;
	public fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}

public final class tangle/viewmodel/compiler/TangleViewModelSubcomponentModuleGenerator : com/squareup/anvil/compiler/api/CodeGenerator {
	public fun <init> ()V
	public fun generateCode (Ljava/io/File;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Ljava/util/Collection;)Ljava/util/Collection;
	public fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}

public final class tangle/viewmodel/compiler/VMInjectGenerator : com/squareup/anvil/compiler/api/CodeGenerator {
	public fun <init> ()V
	public fun generateCode (Ljava/io/File;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Ljava/util/Collection;)Ljava/util/Collection;
	public fun isApplicable (Lcom/squareup/anvil/compiler/api/AnvilContext;)Z
}


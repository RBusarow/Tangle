[{"name":"inline fun <VM : ViewModel> Fragment.tangleViewModel(): Lazy<VM>","description":"tangle.viewmodel.fragment.tangleViewModel","location":"tangle-viewmodel-fragment/tangle.viewmodel.fragment/tangle-view-model.html","searchKeys":["tangleViewModel","inline fun <VM : ViewModel> Fragment.tangleViewModel(): Lazy<VM>","tangle.viewmodel.fragment.tangleViewModel"]},{"name":"abstract class TangleAppScope","description":"tangle.inject.internal.TangleAppScope","location":"tangle-api/tangle.inject.internal/-tangle-app-scope/index.html","searchKeys":["TangleAppScope","abstract class TangleAppScope","tangle.inject.internal.TangleAppScope"]},{"name":"abstract fun inject(target: T)","description":"tangle.inject.internal.TangleInjector.inject","location":"tangle-api/tangle.inject.internal/-tangle-injector/inject.html","searchKeys":["inject","abstract fun inject(target: T)","tangle.inject.internal.TangleInjector.inject"]},{"name":"abstract val injectedClassToScopeClass: Map<Class<*>, Class<*>>","description":"tangle.inject.internal.TangleScopeMapProvider.injectedClassToScopeClass","location":"tangle-api/tangle.inject.internal/-tangle-scope-map-provider/injected-class-to-scope-class.html","searchKeys":["injectedClassToScopeClass","abstract val injectedClassToScopeClass: Map<Class<*>, Class<*>>","tangle.inject.internal.TangleScopeMapProvider.injectedClassToScopeClass"]},{"name":"abstract val injectors: Map<Class<*>, Provider<TangleInjector<*>>>","description":"tangle.inject.internal.TangleInjectorComponent.injectors","location":"tangle-api/tangle.inject.internal/-tangle-injector-component/injectors.html","searchKeys":["injectors","abstract val injectors: Map<Class<*>, Provider<TangleInjector<*>>>","tangle.inject.internal.TangleInjectorComponent.injectors"]},{"name":"abstract val scopeClassToComponentClass: Map<Class<*>, Class<*>>","description":"tangle.inject.internal.TangleScopeMapProvider.scopeClassToComponentClass","location":"tangle-api/tangle.inject.internal/-tangle-scope-map-provider/scope-class-to-component-class.html","searchKeys":["scopeClassToComponentClass","abstract val scopeClassToComponentClass: Map<Class<*>, Class<*>>","tangle.inject.internal.TangleScopeMapProvider.scopeClassToComponentClass"]},{"name":"abstract val scopeMapProvider: TangleScopeMapProvider","description":"tangle.inject.internal.TangleScopeMapProviderComponent.scopeMapProvider","location":"tangle-api/tangle.inject.internal/-tangle-scope-map-provider-component/scope-map-provider.html","searchKeys":["scopeMapProvider","abstract val scopeMapProvider: TangleScopeMapProvider","tangle.inject.internal.TangleScopeMapProviderComponent.scopeMapProvider"]},{"name":"annotation class InternalTangleApi","description":"tangle.inject.InternalTangleApi","location":"tangle-api/tangle.inject/-internal-tangle-api/index.html","searchKeys":["InternalTangleApi","annotation class InternalTangleApi","tangle.inject.InternalTangleApi"]},{"name":"annotation class TangleParam(name: String)","description":"tangle.inject.TangleParam","location":"tangle-api/tangle.inject/-tangle-param/index.html","searchKeys":["TangleParam","annotation class TangleParam(name: String)","tangle.inject.TangleParam"]},{"name":"annotation class TangleScope(scope: KClass<*>)","description":"tangle.inject.TangleScope","location":"tangle-api/tangle.inject/-tangle-scope/index.html","searchKeys":["TangleScope","annotation class TangleScope(scope: KClass<*>)","tangle.inject.TangleScope"]},{"name":"annotation class TangleScopeMap","description":"tangle.inject.internal.TangleScopeMap","location":"tangle-api/tangle.inject.internal/-tangle-scope-map/index.html","searchKeys":["TangleScopeMap","annotation class TangleScopeMap","tangle.inject.internal.TangleScopeMap"]},{"name":"annotation class TangleScopeToComponentMap","description":"tangle.inject.internal.TangleScopeToComponentMap","location":"tangle-api/tangle.inject.internal/-tangle-scope-to-component-map/index.html","searchKeys":["TangleScopeToComponentMap","annotation class TangleScopeToComponentMap","tangle.inject.internal.TangleScopeToComponentMap"]},{"name":"fun InternalTangleApi()","description":"tangle.inject.InternalTangleApi.InternalTangleApi","location":"tangle-api/tangle.inject/-internal-tangle-api/-internal-tangle-api.html","searchKeys":["InternalTangleApi","fun InternalTangleApi()","tangle.inject.InternalTangleApi.InternalTangleApi"]},{"name":"fun TangleParam(name: String)","description":"tangle.inject.TangleParam.TangleParam","location":"tangle-api/tangle.inject/-tangle-param/-tangle-param.html","searchKeys":["TangleParam","fun TangleParam(name: String)","tangle.inject.TangleParam.TangleParam"]},{"name":"fun TangleScope(scope: KClass<*>)","description":"tangle.inject.TangleScope.TangleScope","location":"tangle-api/tangle.inject/-tangle-scope/-tangle-scope.html","searchKeys":["TangleScope","fun TangleScope(scope: KClass<*>)","tangle.inject.TangleScope.TangleScope"]},{"name":"fun TangleScopeMap()","description":"tangle.inject.internal.TangleScopeMap.TangleScopeMap","location":"tangle-api/tangle.inject.internal/-tangle-scope-map/-tangle-scope-map.html","searchKeys":["TangleScopeMap","fun TangleScopeMap()","tangle.inject.internal.TangleScopeMap.TangleScopeMap"]},{"name":"fun TangleScopeToComponentMap()","description":"tangle.inject.internal.TangleScopeToComponentMap.TangleScopeToComponentMap","location":"tangle-api/tangle.inject.internal/-tangle-scope-to-component-map/-tangle-scope-to-component-map.html","searchKeys":["TangleScopeToComponentMap","fun TangleScopeToComponentMap()","tangle.inject.internal.TangleScopeToComponentMap.TangleScopeToComponentMap"]},{"name":"fun add(component: Any)","description":"tangle.inject.TangleGraph.add","location":"tangle-api/tangle.inject/-tangle-graph/add.html","searchKeys":["add","fun add(component: Any)","tangle.inject.TangleGraph.add"]},{"name":"fun init(component: Any)","description":"tangle.inject.TangleGraph.init","location":"tangle-api/tangle.inject/-tangle-graph/init.html","searchKeys":["init","fun init(component: Any)","tangle.inject.TangleGraph.init"]},{"name":"inline fun <T : Any> inject(target: T)","description":"tangle.inject.TangleGraph.inject","location":"tangle-api/tangle.inject/-tangle-graph/inject.html","searchKeys":["inject","inline fun <T : Any> inject(target: T)","tangle.inject.TangleGraph.inject"]},{"name":"inline fun <T> get(): T","description":"tangle.inject.TangleGraph.get","location":"tangle-api/tangle.inject/-tangle-graph/get.html","searchKeys":["get","inline fun <T> get(): T","tangle.inject.TangleGraph.get"]},{"name":"interface TangleInjector<T>","description":"tangle.inject.internal.TangleInjector","location":"tangle-api/tangle.inject.internal/-tangle-injector/index.html","searchKeys":["TangleInjector","interface TangleInjector<T>","tangle.inject.internal.TangleInjector"]},{"name":"interface TangleInjectorComponent","description":"tangle.inject.internal.TangleInjectorComponent","location":"tangle-api/tangle.inject.internal/-tangle-injector-component/index.html","searchKeys":["TangleInjectorComponent","interface TangleInjectorComponent","tangle.inject.internal.TangleInjectorComponent"]},{"name":"interface TangleScopeMapProvider","description":"tangle.inject.internal.TangleScopeMapProvider","location":"tangle-api/tangle.inject.internal/-tangle-scope-map-provider/index.html","searchKeys":["TangleScopeMapProvider","interface TangleScopeMapProvider","tangle.inject.internal.TangleScopeMapProvider"]},{"name":"interface TangleScopeMapProviderComponent","description":"tangle.inject.internal.TangleScopeMapProviderComponent","location":"tangle-api/tangle.inject.internal/-tangle-scope-map-provider-component/index.html","searchKeys":["TangleScopeMapProviderComponent","interface TangleScopeMapProviderComponent","tangle.inject.internal.TangleScopeMapProviderComponent"]},{"name":"object TangleGraph","description":"tangle.inject.TangleGraph","location":"tangle-api/tangle.inject/-tangle-graph/index.html","searchKeys":["TangleGraph","object TangleGraph","tangle.inject.TangleGraph"]},{"name":"val name: String","description":"tangle.inject.TangleParam.name","location":"tangle-api/tangle.inject/-tangle-param/name.html","searchKeys":["name","val name: String","tangle.inject.TangleParam.name"]},{"name":"val scope: KClass<*>","description":"tangle.inject.TangleScope.scope","location":"tangle-api/tangle.inject/-tangle-scope/scope.html","searchKeys":["scope","val scope: KClass<*>","tangle.inject.TangleScope.scope"]},{"name":"abstract class TangleExtension constructor(objectFactory: ObjectFactory)","description":"tangle.inject.gradle.TangleExtension","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/index.html","searchKeys":["TangleExtension","abstract class TangleExtension constructor(objectFactory: ObjectFactory)","tangle.inject.gradle.TangleExtension"]},{"name":"fun TangleExtension(objectFactory: ObjectFactory)","description":"tangle.inject.gradle.TangleExtension.TangleExtension","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/-tangle-extension.html","searchKeys":["TangleExtension","fun TangleExtension(objectFactory: ObjectFactory)","tangle.inject.gradle.TangleExtension.TangleExtension"]},{"name":"fun TanglePlugin()","description":"tangle.inject.gradle.TanglePlugin.TanglePlugin","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-plugin/-tangle-plugin.html","searchKeys":["TanglePlugin","fun TanglePlugin()","tangle.inject.gradle.TanglePlugin.TanglePlugin"]},{"name":"fun ViewModelOptions(objectFactory: ObjectFactory)","description":"tangle.inject.gradle.ViewModelOptions.ViewModelOptions","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/-view-model-options.html","searchKeys":["ViewModelOptions","fun ViewModelOptions(objectFactory: ObjectFactory)","tangle.inject.gradle.ViewModelOptions.ViewModelOptions"]},{"name":"fun viewModelOptions(action: Action<ViewModelOptions>)","description":"tangle.inject.gradle.TangleExtension.viewModelOptions","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/view-model-options.html","searchKeys":["viewModelOptions","fun viewModelOptions(action: Action<ViewModelOptions>)","tangle.inject.gradle.TangleExtension.viewModelOptions"]},{"name":"open class TanglePlugin : BasePlugin","description":"tangle.inject.gradle.TanglePlugin","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-plugin/index.html","searchKeys":["TanglePlugin","open class TanglePlugin : BasePlugin","tangle.inject.gradle.TanglePlugin"]},{"name":"open class ViewModelOptions constructor(objectFactory: ObjectFactory)","description":"tangle.inject.gradle.ViewModelOptions","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/index.html","searchKeys":["ViewModelOptions","open class ViewModelOptions constructor(objectFactory: ObjectFactory)","tangle.inject.gradle.ViewModelOptions"]},{"name":"open override fun apply(target: Project)","description":"tangle.inject.gradle.TanglePlugin.apply","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-plugin/apply.html","searchKeys":["apply","open override fun apply(target: Project)","tangle.inject.gradle.TanglePlugin.apply"]},{"name":"val viewModelOptions: ViewModelOptions","description":"tangle.inject.gradle.TangleExtension.viewModelOptions","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/view-model-options.html","searchKeys":["viewModelOptions","val viewModelOptions: ViewModelOptions","tangle.inject.gradle.TangleExtension.viewModelOptions"]},{"name":"var activitiesEnabled: Boolean?","description":"tangle.inject.gradle.ViewModelOptions.activitiesEnabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/activities-enabled.html","searchKeys":["activitiesEnabled","var activitiesEnabled: Boolean?","tangle.inject.gradle.ViewModelOptions.activitiesEnabled"]},{"name":"var composeEnabled: Boolean?","description":"tangle.inject.gradle.ViewModelOptions.composeEnabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/compose-enabled.html","searchKeys":["composeEnabled","var composeEnabled: Boolean?","tangle.inject.gradle.ViewModelOptions.composeEnabled"]},{"name":"var enabled: Boolean?","description":"tangle.inject.gradle.ViewModelOptions.enabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/enabled.html","searchKeys":["enabled","var enabled: Boolean?","tangle.inject.gradle.ViewModelOptions.enabled"]},{"name":"var fragmentsEnabled: Boolean?","description":"tangle.inject.gradle.TangleExtension.fragmentsEnabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/fragments-enabled.html","searchKeys":["fragmentsEnabled","var fragmentsEnabled: Boolean?","tangle.inject.gradle.TangleExtension.fragmentsEnabled"]},{"name":"var fragmentsEnabled: Boolean?","description":"tangle.inject.gradle.ViewModelOptions.fragmentsEnabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-view-model-options/fragments-enabled.html","searchKeys":["fragmentsEnabled","var fragmentsEnabled: Boolean?","tangle.inject.gradle.ViewModelOptions.fragmentsEnabled"]},{"name":"var workEnabled: Boolean?","description":"tangle.inject.gradle.TangleExtension.workEnabled","location":"tangle-gradle-plugin/tangle.inject.gradle/-tangle-extension/work-enabled.html","searchKeys":["workEnabled","var workEnabled: Boolean?","tangle.inject.gradle.TangleExtension.workEnabled"]},{"name":"inline fun <VM : ViewModel> ComponentActivity.tangleViewModel(): Lazy<VM>","description":"tangle.viewmodel.activity.tangleViewModel","location":"tangle-viewmodel-activity/tangle.viewmodel.activity/tangle-view-model.html","searchKeys":["tangleViewModel","inline fun <VM : ViewModel> ComponentActivity.tangleViewModel(): Lazy<VM>","tangle.viewmodel.activity.tangleViewModel"]},{"name":"annotation class ContributesFragment(scope: KClass<*>, replaces: Array<KClass<*>>)","description":"tangle.fragment.ContributesFragment","location":"tangle-fragment-api/tangle.fragment/-contributes-fragment/index.html","searchKeys":["ContributesFragment","annotation class ContributesFragment(scope: KClass<*>, replaces: Array<KClass<*>>)","tangle.fragment.ContributesFragment"]},{"name":"annotation class FragmentInject","description":"tangle.fragment.FragmentInject","location":"tangle-fragment-api/tangle.fragment/-fragment-inject/index.html","searchKeys":["FragmentInject","annotation class FragmentInject","tangle.fragment.FragmentInject"]},{"name":"annotation class FragmentInjectFactory","description":"tangle.fragment.FragmentInjectFactory","location":"tangle-fragment-api/tangle.fragment/-fragment-inject-factory/index.html","searchKeys":["FragmentInjectFactory","annotation class FragmentInjectFactory","tangle.fragment.FragmentInjectFactory"]},{"name":"annotation class FragmentKey(value: KClass<out Fragment>)","description":"tangle.fragment.FragmentKey","location":"tangle-fragment-api/tangle.fragment/-fragment-key/index.html","searchKeys":["FragmentKey","annotation class FragmentKey(value: KClass<out Fragment>)","tangle.fragment.FragmentKey"]},{"name":"annotation class TangleFragmentProviderMap","description":"tangle.fragment.TangleFragmentProviderMap","location":"tangle-fragment-api/tangle.fragment/-tangle-fragment-provider-map/index.html","searchKeys":["TangleFragmentProviderMap","annotation class TangleFragmentProviderMap","tangle.fragment.TangleFragmentProviderMap"]},{"name":"class TangleFragmentFactory(providerMap: Map<Class<out Fragment>, Provider<Fragment>>, assistedProviderMap: Map<Class<out Fragment>, Provider<Fragment>>) : FragmentFactory","description":"tangle.fragment.TangleFragmentFactory","location":"tangle-fragment-api/tangle.fragment/-tangle-fragment-factory/index.html","searchKeys":["TangleFragmentFactory","class TangleFragmentFactory(providerMap: Map<Class<out Fragment>, Provider<Fragment>>, assistedProviderMap: Map<Class<out Fragment>, Provider<Fragment>>) : FragmentFactory","tangle.fragment.TangleFragmentFactory"]},{"name":"fun ContributesFragment(scope: KClass<*>, replaces: Array<KClass<*>> = [])","description":"tangle.fragment.ContributesFragment.ContributesFragment","location":"tangle-fragment-api/tangle.fragment/-contributes-fragment/-contributes-fragment.html","searchKeys":["ContributesFragment","fun ContributesFragment(scope: KClass<*>, replaces: Array<KClass<*>> = [])","tangle.fragment.ContributesFragment.ContributesFragment"]},{"name":"fun FragmentInject()","description":"tangle.fragment.FragmentInject.FragmentInject","location":"tangle-fragment-api/tangle.fragment/-fragment-inject/-fragment-inject.html","searchKeys":["FragmentInject","fun FragmentInject()","tangle.fragment.FragmentInject.FragmentInject"]},{"name":"fun FragmentInjectFactory()","description":"tangle.fragment.FragmentInjectFactory.FragmentInjectFactory","location":"tangle-fragment-api/tangle.fragment/-fragment-inject-factory/-fragment-inject-factory.html","searchKeys":["FragmentInjectFactory","fun FragmentInjectFactory()","tangle.fragment.FragmentInjectFactory.FragmentInjectFactory"]},{"name":"fun FragmentKey(value: KClass<out Fragment>)","description":"tangle.fragment.FragmentKey.FragmentKey","location":"tangle-fragment-api/tangle.fragment/-fragment-key/-fragment-key.html","searchKeys":["FragmentKey","fun FragmentKey(value: KClass<out Fragment>)","tangle.fragment.FragmentKey.FragmentKey"]},{"name":"fun TangleFragmentFactory(providerMap: Map<Class<out Fragment>, Provider<Fragment>>, assistedProviderMap: Map<Class<out Fragment>, Provider<Fragment>>)","description":"tangle.fragment.TangleFragmentFactory.TangleFragmentFactory","location":"tangle-fragment-api/tangle.fragment/-tangle-fragment-factory/-tangle-fragment-factory.html","searchKeys":["TangleFragmentFactory","fun TangleFragmentFactory(providerMap: Map<Class<out Fragment>, Provider<Fragment>>, assistedProviderMap: Map<Class<out Fragment>, Provider<Fragment>>)","tangle.fragment.TangleFragmentFactory.TangleFragmentFactory"]},{"name":"fun TangleFragmentProviderMap()","description":"tangle.fragment.TangleFragmentProviderMap.TangleFragmentProviderMap","location":"tangle-fragment-api/tangle.fragment/-tangle-fragment-provider-map/-tangle-fragment-provider-map.html","searchKeys":["TangleFragmentProviderMap","fun TangleFragmentProviderMap()","tangle.fragment.TangleFragmentProviderMap.TangleFragmentProviderMap"]},{"name":"inline fun <A> Fragment.arg(bundleKey: String): Lazy<A>","description":"tangle.fragment.arg","location":"tangle-fragment-api/tangle.fragment/arg.html","searchKeys":["arg","inline fun <A> Fragment.arg(bundleKey: String): Lazy<A>","tangle.fragment.arg"]},{"name":"inline fun <A> Fragment.argOrNull(bundleKey: String): Lazy<A?>","description":"tangle.fragment.argOrNull","location":"tangle-fragment-api/tangle.fragment/arg-or-null.html","searchKeys":["argOrNull","inline fun <A> Fragment.argOrNull(bundleKey: String): Lazy<A?>","tangle.fragment.argOrNull"]},{"name":"open override fun instantiate(classLoader: ClassLoader, className: String): Fragment","description":"tangle.fragment.TangleFragmentFactory.instantiate","location":"tangle-fragment-api/tangle.fragment/-tangle-fragment-factory/instantiate.html","searchKeys":["instantiate","open override fun instantiate(classLoader: ClassLoader, className: String): Fragment","tangle.fragment.TangleFragmentFactory.instantiate"]},{"name":"val replaces: Array<KClass<*>>","description":"tangle.fragment.ContributesFragment.replaces","location":"tangle-fragment-api/tangle.fragment/-contributes-fragment/replaces.html","searchKeys":["replaces","val replaces: Array<KClass<*>>","tangle.fragment.ContributesFragment.replaces"]},{"name":"val scope: KClass<*>","description":"tangle.fragment.ContributesFragment.scope","location":"tangle-fragment-api/tangle.fragment/-contributes-fragment/scope.html","searchKeys":["scope","val scope: KClass<*>","tangle.fragment.ContributesFragment.scope"]},{"name":"val value: KClass<out Fragment>","description":"tangle.fragment.FragmentKey.value","location":"tangle-fragment-api/tangle.fragment/-fragment-key/value.html","searchKeys":["value","val value: KClass<out Fragment>","tangle.fragment.FragmentKey.value"]},{"name":"class TangleWorkerCodeGenerator : TangleCodeGenerator","description":"tangle.work.compiler.TangleWorkerCodeGenerator","location":"tangle-work-compiler/tangle.work.compiler/-tangle-worker-code-generator/index.html","searchKeys":["TangleWorkerCodeGenerator","class TangleWorkerCodeGenerator : TangleCodeGenerator","tangle.work.compiler.TangleWorkerCodeGenerator"]},{"name":"class WorkerMergeComponentCodeGenerator : TangleCodeGenerator","description":"tangle.work.compiler.component.WorkerMergeComponentCodeGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-code-generator/index.html","searchKeys":["WorkerMergeComponentCodeGenerator","class WorkerMergeComponentCodeGenerator : TangleCodeGenerator","tangle.work.compiler.component.WorkerMergeComponentCodeGenerator"]},{"name":"data class MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, mergeComponentWorkerFactoryModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","description":"tangle.work.compiler.component.MergeComponentParams","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/index.html","searchKeys":["MergeComponentParams","data class MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, mergeComponentWorkerFactoryModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","tangle.work.compiler.component.MergeComponentParams"]},{"name":"data class TangleAppScopeModule(packageName: String, workerParamsList: List<WorkerParams>)","description":"tangle.work.compiler.TangleAppScopeModule","location":"tangle-work-compiler/tangle.work.compiler/-tangle-app-scope-module/index.html","searchKeys":["TangleAppScopeModule","data class TangleAppScopeModule(packageName: String, workerParamsList: List<WorkerParams>)","tangle.work.compiler.TangleAppScopeModule"]},{"name":"data class WorkerParams(module: ModuleDescriptor, packageName: String, workerClassName: ClassName, workerClassNameString: String, delegateFactoryClassName: ClassName, assistedFactoryClassNameString: String, assistedFactoryClassName: ClassName, constructorParams: List<ConstructorInjectParameter>, assistedArgs: List<ConstructorInjectParameter>)","description":"tangle.work.compiler.WorkerParams","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/index.html","searchKeys":["WorkerParams","data class WorkerParams(module: ModuleDescriptor, packageName: String, workerClassName: ClassName, workerClassNameString: String, delegateFactoryClassName: ClassName, assistedFactoryClassNameString: String, assistedFactoryClassName: ClassName, constructorParams: List<ConstructorInjectParameter>, assistedArgs: List<ConstructorInjectParameter>)","tangle.work.compiler.WorkerParams"]},{"name":"fun MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, mergeComponentWorkerFactoryModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","description":"tangle.work.compiler.component.MergeComponentParams.MergeComponentParams","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/-merge-component-params.html","searchKeys":["MergeComponentParams","fun MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, mergeComponentWorkerFactoryModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","tangle.work.compiler.component.MergeComponentParams.MergeComponentParams"]},{"name":"fun TangleAppScopeModule(packageName: String, workerParamsList: List<WorkerParams>)","description":"tangle.work.compiler.TangleAppScopeModule.TangleAppScopeModule","location":"tangle-work-compiler/tangle.work.compiler/-tangle-app-scope-module/-tangle-app-scope-module.html","searchKeys":["TangleAppScopeModule","fun TangleAppScopeModule(packageName: String, workerParamsList: List<WorkerParams>)","tangle.work.compiler.TangleAppScopeModule.TangleAppScopeModule"]},{"name":"fun TangleWorkerCodeGenerator()","description":"tangle.work.compiler.TangleWorkerCodeGenerator.TangleWorkerCodeGenerator","location":"tangle-work-compiler/tangle.work.compiler/-tangle-worker-code-generator/-tangle-worker-code-generator.html","searchKeys":["TangleWorkerCodeGenerator","fun TangleWorkerCodeGenerator()","tangle.work.compiler.TangleWorkerCodeGenerator.TangleWorkerCodeGenerator"]},{"name":"fun WorkerMergeComponentCodeGenerator()","description":"tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.WorkerMergeComponentCodeGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-code-generator/-worker-merge-component-code-generator.html","searchKeys":["WorkerMergeComponentCodeGenerator","fun WorkerMergeComponentCodeGenerator()","tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.WorkerMergeComponentCodeGenerator"]},{"name":"fun WorkerParams(module: ModuleDescriptor, packageName: String, workerClassName: ClassName, workerClassNameString: String, delegateFactoryClassName: ClassName, assistedFactoryClassNameString: String, assistedFactoryClassName: ClassName, constructorParams: List<ConstructorInjectParameter>, assistedArgs: List<ConstructorInjectParameter>)","description":"tangle.work.compiler.WorkerParams.WorkerParams","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/-worker-params.html","searchKeys":["WorkerParams","fun WorkerParams(module: ModuleDescriptor, packageName: String, workerClassName: ClassName, workerClassNameString: String, delegateFactoryClassName: ClassName, assistedFactoryClassNameString: String, assistedFactoryClassName: ClassName, constructorParams: List<ConstructorInjectParameter>, assistedArgs: List<ConstructorInjectParameter>)","tangle.work.compiler.WorkerParams.WorkerParams"]},{"name":"fun create(clazz: ClassReference, module: ModuleDescriptor): MergeComponentParams","description":"tangle.work.compiler.component.MergeComponentParams.Companion.create","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/-companion/create.html","searchKeys":["create","fun create(clazz: ClassReference, module: ModuleDescriptor): MergeComponentParams","tangle.work.compiler.component.MergeComponentParams.Companion.create"]},{"name":"fun create(module: ModuleDescriptor, workerClass: ClassReference, constructor: FunctionReference): WorkerParams","description":"tangle.work.compiler.WorkerParams.Companion.create","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/-companion/create.html","searchKeys":["create","fun create(module: ModuleDescriptor, workerClass: ClassReference, constructor: FunctionReference): WorkerParams","tangle.work.compiler.WorkerParams.Companion.create"]},{"name":"object AssistedWorkerFactoryGenerator : FileGenerator<WorkerParams> ","description":"tangle.work.compiler.AssistedWorkerFactoryGenerator","location":"tangle-work-compiler/tangle.work.compiler/-assisted-worker-factory-generator/index.html","searchKeys":["AssistedWorkerFactoryGenerator","object AssistedWorkerFactoryGenerator : FileGenerator<WorkerParams> ","tangle.work.compiler.AssistedWorkerFactoryGenerator"]},{"name":"object AssistedWorkerFactoryModuleGenerator : FileGenerator<TangleAppScopeModule> ","description":"tangle.work.compiler.AssistedWorkerFactoryModuleGenerator","location":"tangle-work-compiler/tangle.work.compiler/-assisted-worker-factory-module-generator/index.html","searchKeys":["AssistedWorkerFactoryModuleGenerator","object AssistedWorkerFactoryModuleGenerator : FileGenerator<TangleAppScopeModule> ","tangle.work.compiler.AssistedWorkerFactoryModuleGenerator"]},{"name":"object Companion","description":"tangle.work.compiler.WorkerParams.Companion","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.work.compiler.WorkerParams.Companion"]},{"name":"object Companion","description":"tangle.work.compiler.component.MergeComponentParams.Companion","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.work.compiler.component.MergeComponentParams.Companion"]},{"name":"object WorkerComponentGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.work.compiler.component.WorkerComponentGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-component-generator/index.html","searchKeys":["WorkerComponentGenerator","object WorkerComponentGenerator : FileGenerator<MergeComponentParams> ","tangle.work.compiler.component.WorkerComponentGenerator"]},{"name":"object WorkerFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.work.compiler.component.WorkerFactoryModuleGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-factory-module-generator/index.html","searchKeys":["WorkerFactoryModuleGenerator","object WorkerFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","tangle.work.compiler.component.WorkerFactoryModuleGenerator"]},{"name":"object WorkerMapSubcomponentGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.work.compiler.component.WorkerMapSubcomponentGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-map-subcomponent-generator/index.html","searchKeys":["WorkerMapSubcomponentGenerator","object WorkerMapSubcomponentGenerator : FileGenerator<MergeComponentParams> ","tangle.work.compiler.component.WorkerMapSubcomponentGenerator"]},{"name":"object WorkerMergeComponentModuleGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.work.compiler.component.WorkerMergeComponentModuleGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-module-generator/index.html","searchKeys":["WorkerMergeComponentModuleGenerator","object WorkerMergeComponentModuleGenerator : FileGenerator<MergeComponentParams> ","tangle.work.compiler.component.WorkerMergeComponentModuleGenerator"]},{"name":"object WorkerSubcomponentFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.work.compiler.component.WorkerSubcomponentFactoryModuleGenerator","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-subcomponent-factory-module-generator/index.html","searchKeys":["WorkerSubcomponentFactoryModuleGenerator","object WorkerSubcomponentFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","tangle.work.compiler.component.WorkerSubcomponentFactoryModuleGenerator"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.work.compiler.component.WorkerComponentGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-component-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.work.compiler.component.WorkerComponentGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.work.compiler.component.WorkerMapSubcomponentGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-map-subcomponent-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.work.compiler.component.WorkerMapSubcomponentGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.work.compiler.component.WorkerMergeComponentModuleGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.work.compiler.component.WorkerMergeComponentModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","description":"tangle.work.compiler.component.WorkerFactoryModuleGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-factory-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","tangle.work.compiler.component.WorkerFactoryModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","description":"tangle.work.compiler.component.WorkerSubcomponentFactoryModuleGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-subcomponent-factory-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","tangle.work.compiler.component.WorkerSubcomponentFactoryModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: TangleAppScopeModule): GeneratedFile","description":"tangle.work.compiler.AssistedWorkerFactoryModuleGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler/-assisted-worker-factory-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: TangleAppScopeModule): GeneratedFile","tangle.work.compiler.AssistedWorkerFactoryModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: WorkerParams): GeneratedFile","description":"tangle.work.compiler.AssistedWorkerFactoryGenerator.generate","location":"tangle-work-compiler/tangle.work.compiler/-assisted-worker-factory-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: WorkerParams): GeneratedFile","tangle.work.compiler.AssistedWorkerFactoryGenerator.generate"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.work.compiler.TangleWorkerCodeGenerator.generateTangleCode","location":"tangle-work-compiler/tangle.work.compiler/-tangle-worker-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.work.compiler.TangleWorkerCodeGenerator.generateTangleCode"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.generateTangleCode","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.generateTangleCode"]},{"name":"val ClassNames.androidxListenableWorker: ClassName","description":"tangle.work.compiler.androidxListenableWorker","location":"tangle-work-compiler/tangle.work.compiler/androidx-listenable-worker.html","searchKeys":["androidxListenableWorker","val ClassNames.androidxListenableWorker: ClassName","tangle.work.compiler.androidxListenableWorker"]},{"name":"val ClassNames.androidxWorkerParameters: ClassName","description":"tangle.work.compiler.androidxWorkerParameters","location":"tangle-work-compiler/tangle.work.compiler/androidx-worker-parameters.html","searchKeys":["androidxWorkerParameters","val ClassNames.androidxWorkerParameters: ClassName","tangle.work.compiler.androidxWorkerParameters"]},{"name":"val ClassNames.assistedWorkerFactory: ClassName","description":"tangle.work.compiler.assistedWorkerFactory","location":"tangle-work-compiler/tangle.work.compiler/assisted-worker-factory.html","searchKeys":["assistedWorkerFactory","val ClassNames.assistedWorkerFactory: ClassName","tangle.work.compiler.assistedWorkerFactory"]},{"name":"val ClassNames.assistedWorkerFactoryMap: ParameterizedTypeName","description":"tangle.work.compiler.assistedWorkerFactoryMap","location":"tangle-work-compiler/tangle.work.compiler/assisted-worker-factory-map.html","searchKeys":["assistedWorkerFactoryMap","val ClassNames.assistedWorkerFactoryMap: ParameterizedTypeName","tangle.work.compiler.assistedWorkerFactoryMap"]},{"name":"val ClassNames.tangleAssistedWorkerFactoryMap: ClassName","description":"tangle.work.compiler.tangleAssistedWorkerFactoryMap","location":"tangle-work-compiler/tangle.work.compiler/tangle-assisted-worker-factory-map.html","searchKeys":["tangleAssistedWorkerFactoryMap","val ClassNames.tangleAssistedWorkerFactoryMap: ClassName","tangle.work.compiler.tangleAssistedWorkerFactoryMap"]},{"name":"val ClassNames.tangleWorkerComponent: ClassName","description":"tangle.work.compiler.tangleWorkerComponent","location":"tangle-work-compiler/tangle.work.compiler/tangle-worker-component.html","searchKeys":["tangleWorkerComponent","val ClassNames.tangleWorkerComponent: ClassName","tangle.work.compiler.tangleWorkerComponent"]},{"name":"val ClassNames.tangleWorkerFactory: ClassName","description":"tangle.work.compiler.tangleWorkerFactory","location":"tangle-work-compiler/tangle.work.compiler/tangle-worker-factory.html","searchKeys":["tangleWorkerFactory","val ClassNames.tangleWorkerFactory: ClassName","tangle.work.compiler.tangleWorkerFactory"]},{"name":"val ClassNames.tangleWorkerFactoryMapSubcomponent: ClassName","description":"tangle.work.compiler.tangleWorkerFactoryMapSubcomponent","location":"tangle-work-compiler/tangle.work.compiler/tangle-worker-factory-map-subcomponent.html","searchKeys":["tangleWorkerFactoryMapSubcomponent","val ClassNames.tangleWorkerFactoryMapSubcomponent: ClassName","tangle.work.compiler.tangleWorkerFactoryMapSubcomponent"]},{"name":"val ClassNames.tangleWorkerFactoryMapSubcomponentFactory: ClassName","description":"tangle.work.compiler.tangleWorkerFactoryMapSubcomponentFactory","location":"tangle-work-compiler/tangle.work.compiler/tangle-worker-factory-map-subcomponent-factory.html","searchKeys":["tangleWorkerFactoryMapSubcomponentFactory","val ClassNames.tangleWorkerFactoryMapSubcomponentFactory: ClassName","tangle.work.compiler.tangleWorkerFactoryMapSubcomponentFactory"]},{"name":"val assistedArgs: List<ConstructorInjectParameter>","description":"tangle.work.compiler.WorkerParams.assistedArgs","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/assisted-args.html","searchKeys":["assistedArgs","val assistedArgs: List<ConstructorInjectParameter>","tangle.work.compiler.WorkerParams.assistedArgs"]},{"name":"val assistedFactoryClassName: ClassName","description":"tangle.work.compiler.WorkerParams.assistedFactoryClassName","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/assisted-factory-class-name.html","searchKeys":["assistedFactoryClassName","val assistedFactoryClassName: ClassName","tangle.work.compiler.WorkerParams.assistedFactoryClassName"]},{"name":"val assistedFactoryClassNameString: String","description":"tangle.work.compiler.WorkerParams.assistedFactoryClassNameString","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/assisted-factory-class-name-string.html","searchKeys":["assistedFactoryClassNameString","val assistedFactoryClassNameString: String","tangle.work.compiler.WorkerParams.assistedFactoryClassNameString"]},{"name":"val componentClass: ClassReference","description":"tangle.work.compiler.component.MergeComponentParams.componentClass","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/component-class.html","searchKeys":["componentClass","val componentClass: ClassReference","tangle.work.compiler.component.MergeComponentParams.componentClass"]},{"name":"val componentClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.componentClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/component-class-name.html","searchKeys":["componentClassName","val componentClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.componentClassName"]},{"name":"val constructorParams: List<ConstructorInjectParameter>","description":"tangle.work.compiler.WorkerParams.constructorParams","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/constructor-params.html","searchKeys":["constructorParams","val constructorParams: List<ConstructorInjectParameter>","tangle.work.compiler.WorkerParams.constructorParams"]},{"name":"val delegateFactoryClassName: ClassName","description":"tangle.work.compiler.WorkerParams.delegateFactoryClassName","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/delegate-factory-class-name.html","searchKeys":["delegateFactoryClassName","val delegateFactoryClassName: ClassName","tangle.work.compiler.WorkerParams.delegateFactoryClassName"]},{"name":"val expectedAssistedArgTypes: List<String>","description":"tangle.work.compiler.WorkerParams.Companion.expectedAssistedArgTypes","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/-companion/expected-assisted-arg-types.html","searchKeys":["expectedAssistedArgTypes","val expectedAssistedArgTypes: List<String>","tangle.work.compiler.WorkerParams.Companion.expectedAssistedArgTypes"]},{"name":"val fileGenerators: List<FileGenerator<MergeComponentParams>>","description":"tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.fileGenerators","location":"tangle-work-compiler/tangle.work.compiler.component/-worker-merge-component-code-generator/file-generators.html","searchKeys":["fileGenerators","val fileGenerators: List<FileGenerator<MergeComponentParams>>","tangle.work.compiler.component.WorkerMergeComponentCodeGenerator.fileGenerators"]},{"name":"val mapSubcomponentClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.mapSubcomponentClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/map-subcomponent-class-name.html","searchKeys":["mapSubcomponentClassName","val mapSubcomponentClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.mapSubcomponentClassName"]},{"name":"val mapSubcomponentFactoryClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.mapSubcomponentFactoryClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/map-subcomponent-factory-class-name.html","searchKeys":["mapSubcomponentFactoryClassName","val mapSubcomponentFactoryClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.mapSubcomponentFactoryClassName"]},{"name":"val mergeComponentModuleClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.mergeComponentModuleClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/merge-component-module-class-name.html","searchKeys":["mergeComponentModuleClassName","val mergeComponentModuleClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.mergeComponentModuleClassName"]},{"name":"val mergeComponentWorkerFactoryModuleClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.mergeComponentWorkerFactoryModuleClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/merge-component-worker-factory-module-class-name.html","searchKeys":["mergeComponentWorkerFactoryModuleClassName","val mergeComponentWorkerFactoryModuleClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.mergeComponentWorkerFactoryModuleClassName"]},{"name":"val module: ModuleDescriptor","description":"tangle.work.compiler.WorkerParams.module","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/module.html","searchKeys":["module","val module: ModuleDescriptor","tangle.work.compiler.WorkerParams.module"]},{"name":"val module: ModuleDescriptor","description":"tangle.work.compiler.component.MergeComponentParams.module","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/module.html","searchKeys":["module","val module: ModuleDescriptor","tangle.work.compiler.component.MergeComponentParams.module"]},{"name":"val packageName: String","description":"tangle.work.compiler.TangleAppScopeModule.packageName","location":"tangle-work-compiler/tangle.work.compiler/-tangle-app-scope-module/package-name.html","searchKeys":["packageName","val packageName: String","tangle.work.compiler.TangleAppScopeModule.packageName"]},{"name":"val packageName: String","description":"tangle.work.compiler.WorkerParams.packageName","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/package-name.html","searchKeys":["packageName","val packageName: String","tangle.work.compiler.WorkerParams.packageName"]},{"name":"val packageName: String","description":"tangle.work.compiler.component.MergeComponentParams.packageName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/package-name.html","searchKeys":["packageName","val packageName: String","tangle.work.compiler.component.MergeComponentParams.packageName"]},{"name":"val scopeClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.scopeClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/scope-class-name.html","searchKeys":["scopeClassName","val scopeClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.scopeClassName"]},{"name":"val scopeFqName: FqName","description":"tangle.work.compiler.component.MergeComponentParams.scopeFqName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/scope-fq-name.html","searchKeys":["scopeFqName","val scopeFqName: FqName","tangle.work.compiler.component.MergeComponentParams.scopeFqName"]},{"name":"val scopeQualifier: AnnotationSpec","description":"tangle.work.compiler.component.MergeComponentParams.scopeQualifier","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/scope-qualifier.html","searchKeys":["scopeQualifier","val scopeQualifier: AnnotationSpec","tangle.work.compiler.component.MergeComponentParams.scopeQualifier"]},{"name":"val subcomponentModuleClassName: ClassName","description":"tangle.work.compiler.component.MergeComponentParams.subcomponentModuleClassName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/subcomponent-module-class-name.html","searchKeys":["subcomponentModuleClassName","val subcomponentModuleClassName: ClassName","tangle.work.compiler.component.MergeComponentParams.subcomponentModuleClassName"]},{"name":"val subcomponentModulePackageName: String","description":"tangle.work.compiler.component.MergeComponentParams.subcomponentModulePackageName","location":"tangle-work-compiler/tangle.work.compiler.component/-merge-component-params/subcomponent-module-package-name.html","searchKeys":["subcomponentModulePackageName","val subcomponentModulePackageName: String","tangle.work.compiler.component.MergeComponentParams.subcomponentModulePackageName"]},{"name":"val workerClassName: ClassName","description":"tangle.work.compiler.WorkerParams.workerClassName","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/worker-class-name.html","searchKeys":["workerClassName","val workerClassName: ClassName","tangle.work.compiler.WorkerParams.workerClassName"]},{"name":"val workerClassNameString: String","description":"tangle.work.compiler.WorkerParams.workerClassNameString","location":"tangle-work-compiler/tangle.work.compiler/-worker-params/worker-class-name-string.html","searchKeys":["workerClassNameString","val workerClassNameString: String","tangle.work.compiler.WorkerParams.workerClassNameString"]},{"name":"val workerParamsList: List<WorkerParams>","description":"tangle.work.compiler.TangleAppScopeModule.workerParamsList","location":"tangle-work-compiler/tangle.work.compiler/-tangle-app-scope-module/worker-params-list.html","searchKeys":["workerParamsList","val workerParamsList: List<WorkerParams>","tangle.work.compiler.TangleAppScopeModule.workerParamsList"]},{"name":"ARRAY(Array::class.fqName, Array::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-a-r-r-a-y/index.html","searchKeys":["ARRAY","ARRAY(Array::class.fqName, Array::class.asClassName())","tangle.fragment.compiler.BundleSafe.ARRAY"]},{"name":"BOOLEAN(Boolean::class.fqName, Boolean::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.BOOLEAN","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN(Boolean::class.fqName, Boolean::class.asClassName())","tangle.fragment.compiler.BundleSafe.BOOLEAN"]},{"name":"BOOLEAN_ARRAY(BooleanArray::class.fqName, BooleanArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.BOOLEAN_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-b-o-o-l-e-a-n_-a-r-r-a-y/index.html","searchKeys":["BOOLEAN_ARRAY","BOOLEAN_ARRAY(BooleanArray::class.fqName, BooleanArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.BOOLEAN_ARRAY"]},{"name":"BUNDLE(FqNames.bundle, ClassNames.bundle)","description":"tangle.fragment.compiler.BundleSafe.BUNDLE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-b-u-n-d-l-e/index.html","searchKeys":["BUNDLE","BUNDLE(FqNames.bundle, ClassNames.bundle)","tangle.fragment.compiler.BundleSafe.BUNDLE"]},{"name":"BYTE(Byte::class.fqName, Byte::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.BYTE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-b-y-t-e/index.html","searchKeys":["BYTE","BYTE(Byte::class.fqName, Byte::class.asClassName())","tangle.fragment.compiler.BundleSafe.BYTE"]},{"name":"BYTE_ARRAY(ByteArray::class.fqName, ByteArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.BYTE_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-b-y-t-e_-a-r-r-a-y/index.html","searchKeys":["BYTE_ARRAY","BYTE_ARRAY(ByteArray::class.fqName, ByteArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.BYTE_ARRAY"]},{"name":"CHAR(Char::class.fqName, Char::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.CHAR","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-c-h-a-r/index.html","searchKeys":["CHAR","CHAR(Char::class.fqName, Char::class.asClassName())","tangle.fragment.compiler.BundleSafe.CHAR"]},{"name":"CHAR_ARRAY(CharArray::class.fqName, CharArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.CHAR_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-c-h-a-r_-a-r-r-a-y/index.html","searchKeys":["CHAR_ARRAY","CHAR_ARRAY(CharArray::class.fqName, CharArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.CHAR_ARRAY"]},{"name":"CHAR_SEQUENCE(CharSequence::class.fqName, CharSequence::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.CHAR_SEQUENCE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-c-h-a-r_-s-e-q-u-e-n-c-e/index.html","searchKeys":["CHAR_SEQUENCE","CHAR_SEQUENCE(CharSequence::class.fqName, CharSequence::class.asClassName())","tangle.fragment.compiler.BundleSafe.CHAR_SEQUENCE"]},{"name":"DOUBLE(Double::class.fqName, Double::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.DOUBLE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-d-o-u-b-l-e/index.html","searchKeys":["DOUBLE","DOUBLE(Double::class.fqName, Double::class.asClassName())","tangle.fragment.compiler.BundleSafe.DOUBLE"]},{"name":"DOUBLE_ARRAY(DoubleArray::class.fqName, DoubleArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.DOUBLE_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-d-o-u-b-l-e_-a-r-r-a-y/index.html","searchKeys":["DOUBLE_ARRAY","DOUBLE_ARRAY(DoubleArray::class.fqName, DoubleArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.DOUBLE_ARRAY"]},{"name":"FLOAT(Float::class.fqName, Float::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.FLOAT","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT(Float::class.fqName, Float::class.asClassName())","tangle.fragment.compiler.BundleSafe.FLOAT"]},{"name":"FLOAT_ARRAY(FloatArray::class.fqName, FloatArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.FLOAT_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-f-l-o-a-t_-a-r-r-a-y/index.html","searchKeys":["FLOAT_ARRAY","FLOAT_ARRAY(FloatArray::class.fqName, FloatArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.FLOAT_ARRAY"]},{"name":"IBINDER(FqNames.iBinder, ClassNames.iBinder)","description":"tangle.fragment.compiler.BundleSafe.IBINDER","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-i-b-i-n-d-e-r/index.html","searchKeys":["IBINDER","IBINDER(FqNames.iBinder, ClassNames.iBinder)","tangle.fragment.compiler.BundleSafe.IBINDER"]},{"name":"INT(Int::class.fqName, Int::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.INT","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-i-n-t/index.html","searchKeys":["INT","INT(Int::class.fqName, Int::class.asClassName())","tangle.fragment.compiler.BundleSafe.INT"]},{"name":"INT_ARRAY(IntArray::class.fqName, IntArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.INT_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-i-n-t_-a-r-r-a-y/index.html","searchKeys":["INT_ARRAY","INT_ARRAY(IntArray::class.fqName, IntArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.INT_ARRAY"]},{"name":"LONG(Long::class.fqName, Long::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.LONG","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-l-o-n-g/index.html","searchKeys":["LONG","LONG(Long::class.fqName, Long::class.asClassName())","tangle.fragment.compiler.BundleSafe.LONG"]},{"name":"LONG_ARRAY(LongArray::class.fqName, LongArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.LONG_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-l-o-n-g_-a-r-r-a-y/index.html","searchKeys":["LONG_ARRAY","LONG_ARRAY(LongArray::class.fqName, LongArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.LONG_ARRAY"]},{"name":"PARCELABLE(FqNames.parcelable, ClassNames.parcelable)","description":"tangle.fragment.compiler.BundleSafe.PARCELABLE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-p-a-r-c-e-l-a-b-l-e/index.html","searchKeys":["PARCELABLE","PARCELABLE(FqNames.parcelable, ClassNames.parcelable)","tangle.fragment.compiler.BundleSafe.PARCELABLE"]},{"name":"SERIALIZABLE(Serializable::class.fqName, Serializable::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.SERIALIZABLE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-e-r-i-a-l-i-z-a-b-l-e/index.html","searchKeys":["SERIALIZABLE","SERIALIZABLE(Serializable::class.fqName, Serializable::class.asClassName())","tangle.fragment.compiler.BundleSafe.SERIALIZABLE"]},{"name":"SHORT(Short::class.fqName, Short::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.SHORT","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-h-o-r-t/index.html","searchKeys":["SHORT","SHORT(Short::class.fqName, Short::class.asClassName())","tangle.fragment.compiler.BundleSafe.SHORT"]},{"name":"SHORT_ARRAY(ShortArray::class.fqName, ShortArray::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.SHORT_ARRAY","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-h-o-r-t_-a-r-r-a-y/index.html","searchKeys":["SHORT_ARRAY","SHORT_ARRAY(ShortArray::class.fqName, ShortArray::class.asClassName())","tangle.fragment.compiler.BundleSafe.SHORT_ARRAY"]},{"name":"SIZE(FqNames.size, ClassNames.size)","description":"tangle.fragment.compiler.BundleSafe.SIZE","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-i-z-e/index.html","searchKeys":["SIZE","SIZE(FqNames.size, ClassNames.size)","tangle.fragment.compiler.BundleSafe.SIZE"]},{"name":"SIZE_F(FqNames.sizeF, ClassNames.sizeF)","description":"tangle.fragment.compiler.BundleSafe.SIZE_F","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-i-z-e_-f/index.html","searchKeys":["SIZE_F","SIZE_F(FqNames.sizeF, ClassNames.sizeF)","tangle.fragment.compiler.BundleSafe.SIZE_F"]},{"name":"STRING(String::class.fqName, String::class.asClassName())","description":"tangle.fragment.compiler.BundleSafe.STRING","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING(String::class.fqName, String::class.asClassName())","tangle.fragment.compiler.BundleSafe.STRING"]},{"name":"class ContributesFragmentGenerator : TangleCodeGenerator","description":"tangle.fragment.compiler.ContributesFragmentGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-contributes-fragment-generator/index.html","searchKeys":["ContributesFragmentGenerator","class ContributesFragmentGenerator : TangleCodeGenerator","tangle.fragment.compiler.ContributesFragmentGenerator"]},{"name":"class FragmentInjectGenerator : TangleCodeGenerator","description":"tangle.fragment.compiler.FragmentInjectGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-fragment-inject-generator/index.html","searchKeys":["FragmentInjectGenerator","class FragmentInjectGenerator : TangleCodeGenerator","tangle.fragment.compiler.FragmentInjectGenerator"]},{"name":"class TangleFragmentFactoryModuleGenerator : TangleCodeGenerator","description":"tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-tangle-fragment-factory-module-generator/index.html","searchKeys":["TangleFragmentFactoryModuleGenerator","class TangleFragmentFactoryModuleGenerator : TangleCodeGenerator","tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator"]},{"name":"enum BundleSafe : Enum<BundleSafe> ","description":"tangle.fragment.compiler.BundleSafe","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/index.html","searchKeys":["BundleSafe","enum BundleSafe : Enum<BundleSafe> ","tangle.fragment.compiler.BundleSafe"]},{"name":"fun ContributesFragmentGenerator()","description":"tangle.fragment.compiler.ContributesFragmentGenerator.ContributesFragmentGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-contributes-fragment-generator/-contributes-fragment-generator.html","searchKeys":["ContributesFragmentGenerator","fun ContributesFragmentGenerator()","tangle.fragment.compiler.ContributesFragmentGenerator.ContributesFragmentGenerator"]},{"name":"fun FragmentInjectGenerator()","description":"tangle.fragment.compiler.FragmentInjectGenerator.FragmentInjectGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-fragment-inject-generator/-fragment-inject-generator.html","searchKeys":["FragmentInjectGenerator","fun FragmentInjectGenerator()","tangle.fragment.compiler.FragmentInjectGenerator.FragmentInjectGenerator"]},{"name":"fun TangleFragmentFactoryModuleGenerator()","description":"tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator.TangleFragmentFactoryModuleGenerator","location":"tangle-fragment-compiler/tangle.fragment.compiler/-tangle-fragment-factory-module-generator/-tangle-fragment-factory-module-generator.html","searchKeys":["TangleFragmentFactoryModuleGenerator","fun TangleFragmentFactoryModuleGenerator()","tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator.TangleFragmentFactoryModuleGenerator"]},{"name":"fun contains(fqName: FqName): Boolean","description":"tangle.fragment.compiler.BundleSafe.Companion.contains","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-companion/contains.html","searchKeys":["contains","fun contains(fqName: FqName): Boolean","tangle.fragment.compiler.BundleSafe.Companion.contains"]},{"name":"fun contains(typeName: TypeName): Boolean","description":"tangle.fragment.compiler.BundleSafe.Companion.contains","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-companion/contains.html","searchKeys":["contains","fun contains(typeName: TypeName): Boolean","tangle.fragment.compiler.BundleSafe.Companion.contains"]},{"name":"fun fromTypeNameOrNull(typeName: TypeName): BundleSafe?","description":"tangle.fragment.compiler.BundleSafe.Companion.fromTypeNameOrNull","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-companion/from-type-name-or-null.html","searchKeys":["fromTypeNameOrNull","fun fromTypeNameOrNull(typeName: TypeName): BundleSafe?","tangle.fragment.compiler.BundleSafe.Companion.fromTypeNameOrNull"]},{"name":"object Companion","description":"tangle.fragment.compiler.BundleSafe.Companion","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/-companion/index.html","searchKeys":["Companion","object Companion","tangle.fragment.compiler.BundleSafe.Companion"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.fragment.compiler.ContributesFragmentGenerator.generateTangleCode","location":"tangle-fragment-compiler/tangle.fragment.compiler/-contributes-fragment-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.fragment.compiler.ContributesFragmentGenerator.generateTangleCode"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.fragment.compiler.FragmentInjectGenerator.generateTangleCode","location":"tangle-fragment-compiler/tangle.fragment.compiler/-fragment-inject-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.fragment.compiler.FragmentInjectGenerator.generateTangleCode"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator.generateTangleCode","location":"tangle-fragment-compiler/tangle.fragment.compiler/-tangle-fragment-factory-module-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.fragment.compiler.TangleFragmentFactoryModuleGenerator.generateTangleCode"]},{"name":"val ClassNames.androidxFragment: ClassName","description":"tangle.fragment.compiler.androidxFragment","location":"tangle-fragment-compiler/tangle.fragment.compiler/androidx-fragment.html","searchKeys":["androidxFragment","val ClassNames.androidxFragment: ClassName","tangle.fragment.compiler.androidxFragment"]},{"name":"val ClassNames.fragmentMap: ParameterizedTypeName","description":"tangle.fragment.compiler.fragmentMap","location":"tangle-fragment-compiler/tangle.fragment.compiler/fragment-map.html","searchKeys":["fragmentMap","val ClassNames.fragmentMap: ParameterizedTypeName","tangle.fragment.compiler.fragmentMap"]},{"name":"val ClassNames.fragmentProviderMap: ParameterizedTypeName","description":"tangle.fragment.compiler.fragmentProviderMap","location":"tangle-fragment-compiler/tangle.fragment.compiler/fragment-provider-map.html","searchKeys":["fragmentProviderMap","val ClassNames.fragmentProviderMap: ParameterizedTypeName","tangle.fragment.compiler.fragmentProviderMap"]},{"name":"val ClassNames.tangleFragmentFactory: ClassName","description":"tangle.fragment.compiler.tangleFragmentFactory","location":"tangle-fragment-compiler/tangle.fragment.compiler/tangle-fragment-factory.html","searchKeys":["tangleFragmentFactory","val ClassNames.tangleFragmentFactory: ClassName","tangle.fragment.compiler.tangleFragmentFactory"]},{"name":"val ClassNames.tangleFragmentKey: ClassName","description":"tangle.fragment.compiler.tangleFragmentKey","location":"tangle-fragment-compiler/tangle.fragment.compiler/tangle-fragment-key.html","searchKeys":["tangleFragmentKey","val ClassNames.tangleFragmentKey: ClassName","tangle.fragment.compiler.tangleFragmentKey"]},{"name":"val ClassNames.tangleFragmentProviderMap: ClassName","description":"tangle.fragment.compiler.tangleFragmentProviderMap","location":"tangle-fragment-compiler/tangle.fragment.compiler/tangle-fragment-provider-map.html","searchKeys":["tangleFragmentProviderMap","val ClassNames.tangleFragmentProviderMap: ClassName","tangle.fragment.compiler.tangleFragmentProviderMap"]},{"name":"val className: TypeName","description":"tangle.fragment.compiler.BundleSafe.className","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/class-name.html","searchKeys":["className","val className: TypeName","tangle.fragment.compiler.BundleSafe.className"]},{"name":"val fqName: FqName","description":"tangle.fragment.compiler.BundleSafe.fqName","location":"tangle-fragment-compiler/tangle.fragment.compiler/-bundle-safe/fq-name.html","searchKeys":["fqName","val fqName: FqName","tangle.fragment.compiler.BundleSafe.fqName"]},{"name":"abstract val packageName: String","description":"tangle.viewmodel.compiler.ViewModelInjectParams.packageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-inject-params/package-name.html","searchKeys":["packageName","abstract val packageName: String","tangle.viewmodel.compiler.ViewModelInjectParams.packageName"]},{"name":"abstract val scopeName: FqName","description":"tangle.viewmodel.compiler.ViewModelInjectParams.scopeName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-inject-params/scope-name.html","searchKeys":["scopeName","abstract val scopeName: FqName","tangle.viewmodel.compiler.ViewModelInjectParams.scopeName"]},{"name":"abstract val viewModelClassName: ClassName","description":"tangle.viewmodel.compiler.ViewModelInjectParams.viewModelClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-inject-params/view-model-class-name.html","searchKeys":["viewModelClassName","abstract val viewModelClassName: ClassName","tangle.viewmodel.compiler.ViewModelInjectParams.viewModelClassName"]},{"name":"class VMInjectCodeGenerator : TangleCodeGenerator","description":"tangle.viewmodel.compiler.VMInjectCodeGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-v-m-inject-code-generator/index.html","searchKeys":["VMInjectCodeGenerator","class VMInjectCodeGenerator : TangleCodeGenerator","tangle.viewmodel.compiler.VMInjectCodeGenerator"]},{"name":"class ViewModelComponentGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.viewmodel.compiler.components.ViewModelComponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-component-generator/index.html","searchKeys":["ViewModelComponentGenerator","class ViewModelComponentGenerator : FileGenerator<MergeComponentParams> ","tangle.viewmodel.compiler.components.ViewModelComponentGenerator"]},{"name":"class ViewModelKeysSubcomponentGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-keys-subcomponent-generator/index.html","searchKeys":["ViewModelKeysSubcomponentGenerator","class ViewModelKeysSubcomponentGenerator : FileGenerator<MergeComponentParams> ","tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator"]},{"name":"class ViewModelMapSubcomponentGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-map-subcomponent-generator/index.html","searchKeys":["ViewModelMapSubcomponentGenerator","class ViewModelMapSubcomponentGenerator : FileGenerator<MergeComponentParams> ","tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator"]},{"name":"class ViewModelMergeComponentCodeGenerator : TangleCodeGenerator","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-code-generator/index.html","searchKeys":["ViewModelMergeComponentCodeGenerator","class ViewModelMergeComponentCodeGenerator : TangleCodeGenerator","tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator"]},{"name":"class ViewModelMergeComponentModuleGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-module-generator/index.html","searchKeys":["ViewModelMergeComponentModuleGenerator","class ViewModelMergeComponentModuleGenerator : FileGenerator<MergeComponentParams> ","tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator"]},{"name":"class ViewModelSubcomponentFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","description":"tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-subcomponent-factory-module-generator/index.html","searchKeys":["ViewModelSubcomponentFactoryModuleGenerator","class ViewModelSubcomponentFactoryModuleGenerator : FileGenerator<MergeComponentParams> ","tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator"]},{"name":"class ViewModelTangleAppScopeModuleGenerator : FileGenerator<TangleScopeModule> ","description":"tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-app-scope-module-generator/index.html","searchKeys":["ViewModelTangleAppScopeModuleGenerator","class ViewModelTangleAppScopeModuleGenerator : FileGenerator<TangleScopeModule> ","tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator"]},{"name":"class ViewModelTangleScopeModuleGenerator : FileGenerator<TangleScopeModule> ","description":"tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-scope-module-generator/index.html","searchKeys":["ViewModelTangleScopeModuleGenerator","class ViewModelTangleScopeModuleGenerator : FileGenerator<TangleScopeModule> ","tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator"]},{"name":"data class Factory(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelParams: ViewModelParams, factoryInterface: ClassReference, factoryInterfaceClassName: ClassName, viewModelFactoryClassName: ClassName, factoryImplClassName: ClassName, tangleParams: List<Factory.TangleParameter>, functionName: String) : ViewModelInjectParams","description":"tangle.viewmodel.compiler.Factory","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/index.html","searchKeys":["Factory","data class Factory(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelParams: ViewModelParams, factoryInterface: ClassReference, factoryInterfaceClassName: ClassName, viewModelFactoryClassName: ClassName, factoryImplClassName: ClassName, tangleParams: List<Factory.TangleParameter>, functionName: String) : ViewModelInjectParams","tangle.viewmodel.compiler.Factory"]},{"name":"data class MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, keysSubcomponentClassName: ClassName, keysSubcomponentFactoryClassName: ClassName, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","description":"tangle.viewmodel.compiler.components.MergeComponentParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/index.html","searchKeys":["MergeComponentParams","data class MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, keysSubcomponentClassName: ClassName, keysSubcomponentFactoryClassName: ClassName, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","tangle.viewmodel.compiler.components.MergeComponentParams"]},{"name":"data class TangleParameter(key: String, name: String, typeName: TypeName)","description":"tangle.viewmodel.compiler.Factory.TangleParameter","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-tangle-parameter/index.html","searchKeys":["TangleParameter","data class TangleParameter(key: String, name: String, typeName: TypeName)","tangle.viewmodel.compiler.Factory.TangleParameter"]},{"name":"data class TangleScopeModule(packageName: String, viewModelParamsList: List<ViewModelParams>)","description":"tangle.viewmodel.compiler.TangleScopeModule","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-tangle-scope-module/index.html","searchKeys":["TangleScopeModule","data class TangleScopeModule(packageName: String, viewModelParamsList: List<ViewModelParams>)","tangle.viewmodel.compiler.TangleScopeModule"]},{"name":"data class ViewModelParams(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelClassDescriptor: ClassReference, viewModelConstructorParams: List<ConstructorInjectParameter>, viewModelFactoryClassNameString: String, viewModelFactoryClassName: ClassName, viewModelFactoryConstructorParams: List<Parameter>, constructor: FunctionReference, memberInjectedParams: List<MemberInjectParameter>, typeParameters: List<TypeVariableName>, viewModelClassSimpleName: String, viewModelTypeName: TypeName, savedStateParam: Parameter?) : ViewModelInjectParams","description":"tangle.viewmodel.compiler.ViewModelParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/index.html","searchKeys":["ViewModelParams","data class ViewModelParams(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelClassDescriptor: ClassReference, viewModelConstructorParams: List<ConstructorInjectParameter>, viewModelFactoryClassNameString: String, viewModelFactoryClassName: ClassName, viewModelFactoryConstructorParams: List<Parameter>, constructor: FunctionReference, memberInjectedParams: List<MemberInjectParameter>, typeParameters: List<TypeVariableName>, viewModelClassSimpleName: String, viewModelTypeName: TypeName, savedStateParam: Parameter?) : ViewModelInjectParams","tangle.viewmodel.compiler.ViewModelParams"]},{"name":"fun Factory(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelParams: ViewModelParams, factoryInterface: ClassReference, factoryInterfaceClassName: ClassName, viewModelFactoryClassName: ClassName, factoryImplClassName: ClassName, tangleParams: List<Factory.TangleParameter>, functionName: String)","description":"tangle.viewmodel.compiler.Factory.Factory","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-factory.html","searchKeys":["Factory","fun Factory(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelParams: ViewModelParams, factoryInterface: ClassReference, factoryInterfaceClassName: ClassName, viewModelFactoryClassName: ClassName, factoryImplClassName: ClassName, tangleParams: List<Factory.TangleParameter>, functionName: String)","tangle.viewmodel.compiler.Factory.Factory"]},{"name":"fun MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, keysSubcomponentClassName: ClassName, keysSubcomponentFactoryClassName: ClassName, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","description":"tangle.viewmodel.compiler.components.MergeComponentParams.MergeComponentParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/-merge-component-params.html","searchKeys":["MergeComponentParams","fun MergeComponentParams(module: ModuleDescriptor, packageName: String, subcomponentModulePackageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: ClassReference, keysSubcomponentClassName: ClassName, keysSubcomponentFactoryClassName: ClassName, mapSubcomponentClassName: ClassName, mapSubcomponentFactoryClassName: ClassName, componentClassName: ClassName, mergeComponentModuleClassName: ClassName, subcomponentModuleClassName: ClassName, scopeQualifier: AnnotationSpec)","tangle.viewmodel.compiler.components.MergeComponentParams.MergeComponentParams"]},{"name":"fun TangleParameter(key: String, name: String, typeName: TypeName)","description":"tangle.viewmodel.compiler.Factory.TangleParameter.TangleParameter","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-tangle-parameter/-tangle-parameter.html","searchKeys":["TangleParameter","fun TangleParameter(key: String, name: String, typeName: TypeName)","tangle.viewmodel.compiler.Factory.TangleParameter.TangleParameter"]},{"name":"fun TangleScopeModule(packageName: String, viewModelParamsList: List<ViewModelParams>)","description":"tangle.viewmodel.compiler.TangleScopeModule.TangleScopeModule","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-tangle-scope-module/-tangle-scope-module.html","searchKeys":["TangleScopeModule","fun TangleScopeModule(packageName: String, viewModelParamsList: List<ViewModelParams>)","tangle.viewmodel.compiler.TangleScopeModule.TangleScopeModule"]},{"name":"fun VMInjectCodeGenerator()","description":"tangle.viewmodel.compiler.VMInjectCodeGenerator.VMInjectCodeGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-v-m-inject-code-generator/-v-m-inject-code-generator.html","searchKeys":["VMInjectCodeGenerator","fun VMInjectCodeGenerator()","tangle.viewmodel.compiler.VMInjectCodeGenerator.VMInjectCodeGenerator"]},{"name":"fun ViewModelComponentGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelComponentGenerator.ViewModelComponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-component-generator/-view-model-component-generator.html","searchKeys":["ViewModelComponentGenerator","fun ViewModelComponentGenerator()","tangle.viewmodel.compiler.components.ViewModelComponentGenerator.ViewModelComponentGenerator"]},{"name":"fun ViewModelKeysSubcomponentGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator.ViewModelKeysSubcomponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-keys-subcomponent-generator/-view-model-keys-subcomponent-generator.html","searchKeys":["ViewModelKeysSubcomponentGenerator","fun ViewModelKeysSubcomponentGenerator()","tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator.ViewModelKeysSubcomponentGenerator"]},{"name":"fun ViewModelMapSubcomponentGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator.ViewModelMapSubcomponentGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-map-subcomponent-generator/-view-model-map-subcomponent-generator.html","searchKeys":["ViewModelMapSubcomponentGenerator","fun ViewModelMapSubcomponentGenerator()","tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator.ViewModelMapSubcomponentGenerator"]},{"name":"fun ViewModelMergeComponentCodeGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.ViewModelMergeComponentCodeGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-code-generator/-view-model-merge-component-code-generator.html","searchKeys":["ViewModelMergeComponentCodeGenerator","fun ViewModelMergeComponentCodeGenerator()","tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.ViewModelMergeComponentCodeGenerator"]},{"name":"fun ViewModelMergeComponentModuleGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator.ViewModelMergeComponentModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-module-generator/-view-model-merge-component-module-generator.html","searchKeys":["ViewModelMergeComponentModuleGenerator","fun ViewModelMergeComponentModuleGenerator()","tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator.ViewModelMergeComponentModuleGenerator"]},{"name":"fun ViewModelParams(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelClassDescriptor: ClassReference, viewModelConstructorParams: List<ConstructorInjectParameter>, viewModelFactoryClassNameString: String, viewModelFactoryClassName: ClassName, viewModelFactoryConstructorParams: List<Parameter>, constructor: FunctionReference, memberInjectedParams: List<MemberInjectParameter>, typeParameters: List<TypeVariableName>, viewModelClassSimpleName: String, viewModelTypeName: TypeName, savedStateParam: Parameter?)","description":"tangle.viewmodel.compiler.ViewModelParams.ViewModelParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/-view-model-params.html","searchKeys":["ViewModelParams","fun ViewModelParams(packageName: String, scopeName: FqName, viewModelClassName: ClassName, viewModelClassDescriptor: ClassReference, viewModelConstructorParams: List<ConstructorInjectParameter>, viewModelFactoryClassNameString: String, viewModelFactoryClassName: ClassName, viewModelFactoryConstructorParams: List<Parameter>, constructor: FunctionReference, memberInjectedParams: List<MemberInjectParameter>, typeParameters: List<TypeVariableName>, viewModelClassSimpleName: String, viewModelTypeName: TypeName, savedStateParam: Parameter?)","tangle.viewmodel.compiler.ViewModelParams.ViewModelParams"]},{"name":"fun ViewModelSubcomponentFactoryModuleGenerator()","description":"tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator.ViewModelSubcomponentFactoryModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-subcomponent-factory-module-generator/-view-model-subcomponent-factory-module-generator.html","searchKeys":["ViewModelSubcomponentFactoryModuleGenerator","fun ViewModelSubcomponentFactoryModuleGenerator()","tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator.ViewModelSubcomponentFactoryModuleGenerator"]},{"name":"fun ViewModelTangleAppScopeModuleGenerator()","description":"tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator.ViewModelTangleAppScopeModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-app-scope-module-generator/-view-model-tangle-app-scope-module-generator.html","searchKeys":["ViewModelTangleAppScopeModuleGenerator","fun ViewModelTangleAppScopeModuleGenerator()","tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator.ViewModelTangleAppScopeModuleGenerator"]},{"name":"fun ViewModelTangleScopeModuleGenerator()","description":"tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator.ViewModelTangleScopeModuleGenerator","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-scope-module-generator/-view-model-tangle-scope-module-generator.html","searchKeys":["ViewModelTangleScopeModuleGenerator","fun ViewModelTangleScopeModuleGenerator()","tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator.ViewModelTangleScopeModuleGenerator"]},{"name":"fun create(clazz: ClassReference, module: ModuleDescriptor): MergeComponentParams","description":"tangle.viewmodel.compiler.components.MergeComponentParams.Companion.create","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/-companion/create.html","searchKeys":["create","fun create(clazz: ClassReference, module: ModuleDescriptor): MergeComponentParams","tangle.viewmodel.compiler.components.MergeComponentParams.Companion.create"]},{"name":"fun create(module: ModuleDescriptor, factoryInterface: ClassReference, viewModelClass: ClassReference, constructor: FunctionReference): Factory","description":"tangle.viewmodel.compiler.Factory.Companion.create","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-companion/create.html","searchKeys":["create","fun create(module: ModuleDescriptor, factoryInterface: ClassReference, viewModelClass: ClassReference, constructor: FunctionReference): Factory","tangle.viewmodel.compiler.Factory.Companion.create"]},{"name":"fun create(module: ModuleDescriptor, viewModelClass: ClassReference, constructor: FunctionReference): ViewModelParams","description":"tangle.viewmodel.compiler.ViewModelParams.Companion.create","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/-companion/create.html","searchKeys":["create","fun create(module: ModuleDescriptor, viewModelClass: ClassReference, constructor: FunctionReference): ViewModelParams","tangle.viewmodel.compiler.ViewModelParams.Companion.create"]},{"name":"interface ViewModelInjectParams","description":"tangle.viewmodel.compiler.ViewModelInjectParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-inject-params/index.html","searchKeys":["ViewModelInjectParams","interface ViewModelInjectParams","tangle.viewmodel.compiler.ViewModelInjectParams"]},{"name":"object Companion","description":"tangle.viewmodel.compiler.Factory.Companion","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-companion/index.html","searchKeys":["Companion","object Companion","tangle.viewmodel.compiler.Factory.Companion"]},{"name":"object Companion","description":"tangle.viewmodel.compiler.ViewModelParams.Companion","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.viewmodel.compiler.ViewModelParams.Companion"]},{"name":"object Companion","description":"tangle.viewmodel.compiler.components.MergeComponentParams.Companion","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.viewmodel.compiler.components.MergeComponentParams.Companion"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.viewmodel.compiler.components.ViewModelComponentGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-component-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.viewmodel.compiler.components.ViewModelComponentGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-keys-subcomponent-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.viewmodel.compiler.components.ViewModelKeysSubcomponentGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-map-subcomponent-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.viewmodel.compiler.components.ViewModelMapSubcomponentGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile","tangle.viewmodel.compiler.components.ViewModelMergeComponentModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","description":"tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-subcomponent-factory-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: MergeComponentParams): GeneratedFile?","tangle.viewmodel.compiler.components.ViewModelSubcomponentFactoryModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: TangleScopeModule): GeneratedFile","description":"tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-app-scope-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: TangleScopeModule): GeneratedFile","tangle.viewmodel.compiler.ViewModelTangleAppScopeModuleGenerator.generate"]},{"name":"open override fun generate(codeGenDir: File, params: TangleScopeModule): GeneratedFile","description":"tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator.generate","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-tangle-scope-module-generator/generate.html","searchKeys":["generate","open override fun generate(codeGenDir: File, params: TangleScopeModule): GeneratedFile","tangle.viewmodel.compiler.ViewModelTangleScopeModuleGenerator.generate"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.viewmodel.compiler.VMInjectCodeGenerator.generateTangleCode","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-v-m-inject-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.viewmodel.compiler.VMInjectCodeGenerator.generateTangleCode"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.generateTangleCode","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.generateTangleCode"]},{"name":"open override val packageName: String","description":"tangle.viewmodel.compiler.Factory.packageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/package-name.html","searchKeys":["packageName","open override val packageName: String","tangle.viewmodel.compiler.Factory.packageName"]},{"name":"open override val packageName: String","description":"tangle.viewmodel.compiler.ViewModelParams.packageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/package-name.html","searchKeys":["packageName","open override val packageName: String","tangle.viewmodel.compiler.ViewModelParams.packageName"]},{"name":"open override val scopeName: FqName","description":"tangle.viewmodel.compiler.Factory.scopeName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/scope-name.html","searchKeys":["scopeName","open override val scopeName: FqName","tangle.viewmodel.compiler.Factory.scopeName"]},{"name":"open override val scopeName: FqName","description":"tangle.viewmodel.compiler.ViewModelParams.scopeName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/scope-name.html","searchKeys":["scopeName","open override val scopeName: FqName","tangle.viewmodel.compiler.ViewModelParams.scopeName"]},{"name":"open override val viewModelClassName: ClassName","description":"tangle.viewmodel.compiler.Factory.viewModelClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/view-model-class-name.html","searchKeys":["viewModelClassName","open override val viewModelClassName: ClassName","tangle.viewmodel.compiler.Factory.viewModelClassName"]},{"name":"open override val viewModelClassName: ClassName","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-class-name.html","searchKeys":["viewModelClassName","open override val viewModelClassName: ClassName","tangle.viewmodel.compiler.ViewModelParams.viewModelClassName"]},{"name":"val ClassNames.androidxSavedStateHandle: ClassName","description":"tangle.viewmodel.compiler.androidxSavedStateHandle","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/androidx-saved-state-handle.html","searchKeys":["androidxSavedStateHandle","val ClassNames.androidxSavedStateHandle: ClassName","tangle.viewmodel.compiler.androidxSavedStateHandle"]},{"name":"val ClassNames.androidxViewModel: ClassName","description":"tangle.viewmodel.compiler.androidxViewModel","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/androidx-view-model.html","searchKeys":["androidxViewModel","val ClassNames.androidxViewModel: ClassName","tangle.viewmodel.compiler.androidxViewModel"]},{"name":"val ClassNames.javaClassOutVM: ParameterizedTypeName","description":"tangle.viewmodel.compiler.javaClassOutVM","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/java-class-out-v-m.html","searchKeys":["javaClassOutVM","val ClassNames.javaClassOutVM: ParameterizedTypeName","tangle.viewmodel.compiler.javaClassOutVM"]},{"name":"val ClassNames.tangleViewModelComponent: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelComponent","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-component.html","searchKeys":["tangleViewModelComponent","val ClassNames.tangleViewModelComponent: ClassName","tangle.viewmodel.compiler.tangleViewModelComponent"]},{"name":"val ClassNames.tangleViewModelKeysSubcomponent: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelKeysSubcomponent","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-keys-subcomponent.html","searchKeys":["tangleViewModelKeysSubcomponent","val ClassNames.tangleViewModelKeysSubcomponent: ClassName","tangle.viewmodel.compiler.tangleViewModelKeysSubcomponent"]},{"name":"val ClassNames.tangleViewModelKeysSubcomponentFactory: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelKeysSubcomponentFactory","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-keys-subcomponent-factory.html","searchKeys":["tangleViewModelKeysSubcomponentFactory","val ClassNames.tangleViewModelKeysSubcomponentFactory: ClassName","tangle.viewmodel.compiler.tangleViewModelKeysSubcomponentFactory"]},{"name":"val ClassNames.tangleViewModelMapSubcomponent: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelMapSubcomponent","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-map-subcomponent.html","searchKeys":["tangleViewModelMapSubcomponent","val ClassNames.tangleViewModelMapSubcomponent: ClassName","tangle.viewmodel.compiler.tangleViewModelMapSubcomponent"]},{"name":"val ClassNames.tangleViewModelMapSubcomponentFactory: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelMapSubcomponentFactory","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-map-subcomponent-factory.html","searchKeys":["tangleViewModelMapSubcomponentFactory","val ClassNames.tangleViewModelMapSubcomponentFactory: ClassName","tangle.viewmodel.compiler.tangleViewModelMapSubcomponentFactory"]},{"name":"val ClassNames.tangleViewModelProviderMap: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelProviderMap","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-provider-map.html","searchKeys":["tangleViewModelProviderMap","val ClassNames.tangleViewModelProviderMap: ClassName","tangle.viewmodel.compiler.tangleViewModelProviderMap"]},{"name":"val ClassNames.tangleViewModelProviderMapKeySet: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelProviderMapKeySet","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-provider-map-key-set.html","searchKeys":["tangleViewModelProviderMapKeySet","val ClassNames.tangleViewModelProviderMapKeySet: ClassName","tangle.viewmodel.compiler.tangleViewModelProviderMapKeySet"]},{"name":"val ClassNames.tangleViewModelScope: ClassName","description":"tangle.viewmodel.compiler.tangleViewModelScope","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/tangle-view-model-scope.html","searchKeys":["tangleViewModelScope","val ClassNames.tangleViewModelScope: ClassName","tangle.viewmodel.compiler.tangleViewModelScope"]},{"name":"val ClassNames.viewModelClassSet: ParameterizedTypeName","description":"tangle.viewmodel.compiler.viewModelClassSet","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/view-model-class-set.html","searchKeys":["viewModelClassSet","val ClassNames.viewModelClassSet: ParameterizedTypeName","tangle.viewmodel.compiler.viewModelClassSet"]},{"name":"val ClassNames.viewModelMap: ParameterizedTypeName","description":"tangle.viewmodel.compiler.viewModelMap","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/view-model-map.html","searchKeys":["viewModelMap","val ClassNames.viewModelMap: ParameterizedTypeName","tangle.viewmodel.compiler.viewModelMap"]},{"name":"val componentClass: ClassReference","description":"tangle.viewmodel.compiler.components.MergeComponentParams.componentClass","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/component-class.html","searchKeys":["componentClass","val componentClass: ClassReference","tangle.viewmodel.compiler.components.MergeComponentParams.componentClass"]},{"name":"val componentClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.componentClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/component-class-name.html","searchKeys":["componentClassName","val componentClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.componentClassName"]},{"name":"val constructor: FunctionReference","description":"tangle.viewmodel.compiler.ViewModelParams.constructor","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/constructor.html","searchKeys":["constructor","val constructor: FunctionReference","tangle.viewmodel.compiler.ViewModelParams.constructor"]},{"name":"val factoryImplClassName: ClassName","description":"tangle.viewmodel.compiler.Factory.factoryImplClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/factory-impl-class-name.html","searchKeys":["factoryImplClassName","val factoryImplClassName: ClassName","tangle.viewmodel.compiler.Factory.factoryImplClassName"]},{"name":"val factoryInterface: ClassReference","description":"tangle.viewmodel.compiler.Factory.factoryInterface","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/factory-interface.html","searchKeys":["factoryInterface","val factoryInterface: ClassReference","tangle.viewmodel.compiler.Factory.factoryInterface"]},{"name":"val factoryInterfaceClassName: ClassName","description":"tangle.viewmodel.compiler.Factory.factoryInterfaceClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/factory-interface-class-name.html","searchKeys":["factoryInterfaceClassName","val factoryInterfaceClassName: ClassName","tangle.viewmodel.compiler.Factory.factoryInterfaceClassName"]},{"name":"val fileGenerators: List<FileGenerator<MergeComponentParams>>","description":"tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.fileGenerators","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-view-model-merge-component-code-generator/file-generators.html","searchKeys":["fileGenerators","val fileGenerators: List<FileGenerator<MergeComponentParams>>","tangle.viewmodel.compiler.components.ViewModelMergeComponentCodeGenerator.fileGenerators"]},{"name":"val functionName: String","description":"tangle.viewmodel.compiler.Factory.functionName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/function-name.html","searchKeys":["functionName","val functionName: String","tangle.viewmodel.compiler.Factory.functionName"]},{"name":"val key: String","description":"tangle.viewmodel.compiler.Factory.TangleParameter.key","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-tangle-parameter/key.html","searchKeys":["key","val key: String","tangle.viewmodel.compiler.Factory.TangleParameter.key"]},{"name":"val keysSubcomponentClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.keysSubcomponentClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/keys-subcomponent-class-name.html","searchKeys":["keysSubcomponentClassName","val keysSubcomponentClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.keysSubcomponentClassName"]},{"name":"val keysSubcomponentFactoryClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.keysSubcomponentFactoryClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/keys-subcomponent-factory-class-name.html","searchKeys":["keysSubcomponentFactoryClassName","val keysSubcomponentFactoryClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.keysSubcomponentFactoryClassName"]},{"name":"val mapSubcomponentClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.mapSubcomponentClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/map-subcomponent-class-name.html","searchKeys":["mapSubcomponentClassName","val mapSubcomponentClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.mapSubcomponentClassName"]},{"name":"val mapSubcomponentFactoryClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.mapSubcomponentFactoryClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/map-subcomponent-factory-class-name.html","searchKeys":["mapSubcomponentFactoryClassName","val mapSubcomponentFactoryClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.mapSubcomponentFactoryClassName"]},{"name":"val memberInjectedParams: List<MemberInjectParameter>","description":"tangle.viewmodel.compiler.ViewModelParams.memberInjectedParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/member-injected-params.html","searchKeys":["memberInjectedParams","val memberInjectedParams: List<MemberInjectParameter>","tangle.viewmodel.compiler.ViewModelParams.memberInjectedParams"]},{"name":"val mergeComponentModuleClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.mergeComponentModuleClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/merge-component-module-class-name.html","searchKeys":["mergeComponentModuleClassName","val mergeComponentModuleClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.mergeComponentModuleClassName"]},{"name":"val module: ModuleDescriptor","description":"tangle.viewmodel.compiler.components.MergeComponentParams.module","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/module.html","searchKeys":["module","val module: ModuleDescriptor","tangle.viewmodel.compiler.components.MergeComponentParams.module"]},{"name":"val name: String","description":"tangle.viewmodel.compiler.Factory.TangleParameter.name","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-tangle-parameter/name.html","searchKeys":["name","val name: String","tangle.viewmodel.compiler.Factory.TangleParameter.name"]},{"name":"val packageName: String","description":"tangle.viewmodel.compiler.TangleScopeModule.packageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-tangle-scope-module/package-name.html","searchKeys":["packageName","val packageName: String","tangle.viewmodel.compiler.TangleScopeModule.packageName"]},{"name":"val packageName: String","description":"tangle.viewmodel.compiler.components.MergeComponentParams.packageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/package-name.html","searchKeys":["packageName","val packageName: String","tangle.viewmodel.compiler.components.MergeComponentParams.packageName"]},{"name":"val savedStateParam: Parameter?","description":"tangle.viewmodel.compiler.ViewModelParams.savedStateParam","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/saved-state-param.html","searchKeys":["savedStateParam","val savedStateParam: Parameter?","tangle.viewmodel.compiler.ViewModelParams.savedStateParam"]},{"name":"val scopeClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.scopeClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/scope-class-name.html","searchKeys":["scopeClassName","val scopeClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.scopeClassName"]},{"name":"val scopeFqName: FqName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.scopeFqName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/scope-fq-name.html","searchKeys":["scopeFqName","val scopeFqName: FqName","tangle.viewmodel.compiler.components.MergeComponentParams.scopeFqName"]},{"name":"val scopeQualifier: AnnotationSpec","description":"tangle.viewmodel.compiler.components.MergeComponentParams.scopeQualifier","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/scope-qualifier.html","searchKeys":["scopeQualifier","val scopeQualifier: AnnotationSpec","tangle.viewmodel.compiler.components.MergeComponentParams.scopeQualifier"]},{"name":"val subcomponentModuleClassName: ClassName","description":"tangle.viewmodel.compiler.components.MergeComponentParams.subcomponentModuleClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/subcomponent-module-class-name.html","searchKeys":["subcomponentModuleClassName","val subcomponentModuleClassName: ClassName","tangle.viewmodel.compiler.components.MergeComponentParams.subcomponentModuleClassName"]},{"name":"val subcomponentModulePackageName: String","description":"tangle.viewmodel.compiler.components.MergeComponentParams.subcomponentModulePackageName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler.components/-merge-component-params/subcomponent-module-package-name.html","searchKeys":["subcomponentModulePackageName","val subcomponentModulePackageName: String","tangle.viewmodel.compiler.components.MergeComponentParams.subcomponentModulePackageName"]},{"name":"val tangleParams: List<Factory.TangleParameter>","description":"tangle.viewmodel.compiler.Factory.tangleParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/tangle-params.html","searchKeys":["tangleParams","val tangleParams: List<Factory.TangleParameter>","tangle.viewmodel.compiler.Factory.tangleParams"]},{"name":"val typeName: TypeName","description":"tangle.viewmodel.compiler.Factory.TangleParameter.typeName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/-tangle-parameter/type-name.html","searchKeys":["typeName","val typeName: TypeName","tangle.viewmodel.compiler.Factory.TangleParameter.typeName"]},{"name":"val typeParameters: List<TypeVariableName>","description":"tangle.viewmodel.compiler.ViewModelParams.typeParameters","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/type-parameters.html","searchKeys":["typeParameters","val typeParameters: List<TypeVariableName>","tangle.viewmodel.compiler.ViewModelParams.typeParameters"]},{"name":"val viewModelClassDescriptor: ClassReference","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelClassDescriptor","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-class-descriptor.html","searchKeys":["viewModelClassDescriptor","val viewModelClassDescriptor: ClassReference","tangle.viewmodel.compiler.ViewModelParams.viewModelClassDescriptor"]},{"name":"val viewModelClassSimpleName: String","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelClassSimpleName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-class-simple-name.html","searchKeys":["viewModelClassSimpleName","val viewModelClassSimpleName: String","tangle.viewmodel.compiler.ViewModelParams.viewModelClassSimpleName"]},{"name":"val viewModelConstructorParams: List<ConstructorInjectParameter>","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelConstructorParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-constructor-params.html","searchKeys":["viewModelConstructorParams","val viewModelConstructorParams: List<ConstructorInjectParameter>","tangle.viewmodel.compiler.ViewModelParams.viewModelConstructorParams"]},{"name":"val viewModelFactoryClassName: ClassName","description":"tangle.viewmodel.compiler.Factory.viewModelFactoryClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/view-model-factory-class-name.html","searchKeys":["viewModelFactoryClassName","val viewModelFactoryClassName: ClassName","tangle.viewmodel.compiler.Factory.viewModelFactoryClassName"]},{"name":"val viewModelFactoryClassName: ClassName","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryClassName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-factory-class-name.html","searchKeys":["viewModelFactoryClassName","val viewModelFactoryClassName: ClassName","tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryClassName"]},{"name":"val viewModelFactoryClassNameString: String","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryClassNameString","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-factory-class-name-string.html","searchKeys":["viewModelFactoryClassNameString","val viewModelFactoryClassNameString: String","tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryClassNameString"]},{"name":"val viewModelFactoryConstructorParams: List<Parameter>","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryConstructorParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-factory-constructor-params.html","searchKeys":["viewModelFactoryConstructorParams","val viewModelFactoryConstructorParams: List<Parameter>","tangle.viewmodel.compiler.ViewModelParams.viewModelFactoryConstructorParams"]},{"name":"val viewModelParams: ViewModelParams","description":"tangle.viewmodel.compiler.Factory.viewModelParams","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-factory/view-model-params.html","searchKeys":["viewModelParams","val viewModelParams: ViewModelParams","tangle.viewmodel.compiler.Factory.viewModelParams"]},{"name":"val viewModelParamsList: List<ViewModelParams>","description":"tangle.viewmodel.compiler.TangleScopeModule.viewModelParamsList","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-tangle-scope-module/view-model-params-list.html","searchKeys":["viewModelParamsList","val viewModelParamsList: List<ViewModelParams>","tangle.viewmodel.compiler.TangleScopeModule.viewModelParamsList"]},{"name":"val viewModelTypeName: TypeName","description":"tangle.viewmodel.compiler.ViewModelParams.viewModelTypeName","location":"tangle-viewmodel-compiler/tangle.viewmodel.compiler/-view-model-params/view-model-type-name.html","searchKeys":["viewModelTypeName","val viewModelTypeName: TypeName","tangle.viewmodel.compiler.ViewModelParams.viewModelTypeName"]},{"name":"abstract class TangleCodeGenerator : CodeGenerator","description":"tangle.inject.compiler.TangleCodeGenerator","location":"tangle-compiler/tangle.inject.compiler/-tangle-code-generator/index.html","searchKeys":["TangleCodeGenerator","abstract class TangleCodeGenerator : CodeGenerator","tangle.inject.compiler.TangleCodeGenerator"]},{"name":"abstract fun generate(codeGenDir: File, params: T): GeneratedFile?","description":"tangle.inject.compiler.FileGenerator.generate","location":"tangle-compiler/tangle.inject.compiler/-file-generator/generate.html","searchKeys":["generate","abstract fun generate(codeGenDir: File, params: T): GeneratedFile?","tangle.inject.compiler.FileGenerator.generate"]},{"name":"abstract fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.inject.compiler.TangleCodeGenerator.generateTangleCode","location":"tangle-compiler/tangle.inject.compiler/-tangle-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","abstract fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.inject.compiler.TangleCodeGenerator.generateTangleCode"]},{"name":"abstract val isWrappedInLazy: Boolean","description":"tangle.inject.compiler.Parameter.isWrappedInLazy","location":"tangle-compiler/tangle.inject.compiler/-parameter/is-wrapped-in-lazy.html","searchKeys":["isWrappedInLazy","abstract val isWrappedInLazy: Boolean","tangle.inject.compiler.Parameter.isWrappedInLazy"]},{"name":"abstract val isWrappedInProvider: Boolean","description":"tangle.inject.compiler.Parameter.isWrappedInProvider","location":"tangle-compiler/tangle.inject.compiler/-parameter/is-wrapped-in-provider.html","searchKeys":["isWrappedInProvider","abstract val isWrappedInProvider: Boolean","tangle.inject.compiler.Parameter.isWrappedInProvider"]},{"name":"abstract val lazyTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.Parameter.lazyTypeName","location":"tangle-compiler/tangle.inject.compiler/-parameter/lazy-type-name.html","searchKeys":["lazyTypeName","abstract val lazyTypeName: ParameterizedTypeName","tangle.inject.compiler.Parameter.lazyTypeName"]},{"name":"abstract val name: String","description":"tangle.inject.compiler.Parameter.name","location":"tangle-compiler/tangle.inject.compiler/-parameter/name.html","searchKeys":["name","abstract val name: String","tangle.inject.compiler.Parameter.name"]},{"name":"abstract val providerTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.Parameter.providerTypeName","location":"tangle-compiler/tangle.inject.compiler/-parameter/provider-type-name.html","searchKeys":["providerTypeName","abstract val providerTypeName: ParameterizedTypeName","tangle.inject.compiler.Parameter.providerTypeName"]},{"name":"abstract val qualifiers: List<AnnotationSpec>","description":"tangle.inject.compiler.Parameter.qualifiers","location":"tangle-compiler/tangle.inject.compiler/-parameter/qualifiers.html","searchKeys":["qualifiers","abstract val qualifiers: List<AnnotationSpec>","tangle.inject.compiler.Parameter.qualifiers"]},{"name":"abstract val tangleParamName: String?","description":"tangle.inject.compiler.Parameter.tangleParamName","location":"tangle-compiler/tangle.inject.compiler/-parameter/tangle-param-name.html","searchKeys":["tangleParamName","abstract val tangleParamName: String?","tangle.inject.compiler.Parameter.tangleParamName"]},{"name":"abstract val typeName: TypeName","description":"tangle.inject.compiler.Parameter.typeName","location":"tangle-compiler/tangle.inject.compiler/-parameter/type-name.html","searchKeys":["typeName","abstract val typeName: TypeName","tangle.inject.compiler.Parameter.typeName"]},{"name":"class MemberInjectCodeGenerator : TangleCodeGenerator","description":"tangle.inject.compiler.memberInject.MemberInjectCodeGenerator","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-code-generator/index.html","searchKeys":["MemberInjectCodeGenerator","class MemberInjectCodeGenerator : TangleCodeGenerator","tangle.inject.compiler.memberInject.MemberInjectCodeGenerator"]},{"name":"class TangleCompilationException(message: String, cause: Throwable?, element: PsiElement?) : CompilationException","description":"tangle.inject.compiler.TangleCompilationException","location":"tangle-compiler/tangle.inject.compiler/-tangle-compilation-exception/index.html","searchKeys":["TangleCompilationException","class TangleCompilationException(message: String, cause: Throwable?, element: PsiElement?) : CompilationException","tangle.inject.compiler.TangleCompilationException"]},{"name":"class TangleInjectorMergeComponentCodeGenerator : TangleCodeGenerator","description":"tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator","location":"tangle-compiler/tangle.inject.compiler.components/-tangle-injector-merge-component-code-generator/index.html","searchKeys":["TangleInjectorMergeComponentCodeGenerator","class TangleInjectorMergeComponentCodeGenerator : TangleCodeGenerator","tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator"]},{"name":"const val CONSTANT_PACKAGE_NAME: String","description":"tangle.inject.compiler.FileGenerator.Companion.CONSTANT_PACKAGE_NAME","location":"tangle-compiler/tangle.inject.compiler/-file-generator/-companion/-c-o-n-s-t-a-n-t_-p-a-c-k-a-g-e_-n-a-m-e.html","searchKeys":["CONSTANT_PACKAGE_NAME","const val CONSTANT_PACKAGE_NAME: String","tangle.inject.compiler.FileGenerator.Companion.CONSTANT_PACKAGE_NAME"]},{"name":"data class ConstructorInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, isDaggerAssisted: Boolean) : Parameter","description":"tangle.inject.compiler.ConstructorInjectParameter","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/index.html","searchKeys":["ConstructorInjectParameter","data class ConstructorInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, isDaggerAssisted: Boolean) : Parameter","tangle.inject.compiler.ConstructorInjectParameter"]},{"name":"data class MemberInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, memberInjectorClass: ClassName) : Parameter","description":"tangle.inject.compiler.MemberInjectParameter","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/index.html","searchKeys":["MemberInjectParameter","data class MemberInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, memberInjectorClass: ClassName) : Parameter","tangle.inject.compiler.MemberInjectParameter"]},{"name":"data class MemberInjectParams(scopeClassName: ClassName, packageName: String, injectedClassName: ClassName, userScopeModuleName: String, userScopeModuleClassName: ClassName, tangleAppScopeModuleClassName: ClassName, injectorName: String, injectorClassName: ClassName, hasInjectedMembers: Boolean)","description":"tangle.inject.compiler.memberInject.MemberInjectParams","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/index.html","searchKeys":["MemberInjectParams","data class MemberInjectParams(scopeClassName: ClassName, packageName: String, injectedClassName: ClassName, userScopeModuleName: String, userScopeModuleClassName: ClassName, tangleAppScopeModuleClassName: ClassName, injectorName: String, injectorClassName: ClassName, hasInjectedMembers: Boolean)","tangle.inject.compiler.memberInject.MemberInjectParams"]},{"name":"data class MergeComponentParams(module: ModuleDescriptor, packageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: KtClassOrObject, componentClassName: ClassName, providerComponentClassName: ClassName, memberInjectToScopeMapProviderSubcomponentClassName: ClassName, mergeComponentTangleInjectorModuleClassName: ClassName, scopeToComponentModuleClassName: ClassName, originalComponentClassName: ClassName, scopeQualifier: AnnotationSpec, forSubcomponent: Boolean)","description":"tangle.inject.compiler.components.MergeComponentParams","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/index.html","searchKeys":["MergeComponentParams","data class MergeComponentParams(module: ModuleDescriptor, packageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: KtClassOrObject, componentClassName: ClassName, providerComponentClassName: ClassName, memberInjectToScopeMapProviderSubcomponentClassName: ClassName, mergeComponentTangleInjectorModuleClassName: ClassName, scopeToComponentModuleClassName: ClassName, originalComponentClassName: ClassName, scopeQualifier: AnnotationSpec, forSubcomponent: Boolean)","tangle.inject.compiler.components.MergeComponentParams"]},{"name":"fun <T : AnnotationReference> Iterable<T>.find(fqName: FqName): T?","description":"tangle.inject.compiler.find","location":"tangle-compiler/tangle.inject.compiler/find.html","searchKeys":["find","fun <T : AnnotationReference> Iterable<T>.find(fqName: FqName): T?","tangle.inject.compiler.find"]},{"name":"fun AnnotationSpec(annotationClass: KClass<out Annotation>, block: AnnotationSpec.Builder.() -> Unit): AnnotationSpec","description":"tangle.inject.compiler.AnnotationSpec","location":"tangle-compiler/tangle.inject.compiler/-annotation-spec.html","searchKeys":["AnnotationSpec","fun AnnotationSpec(annotationClass: KClass<out Annotation>, block: AnnotationSpec.Builder.() -> Unit): AnnotationSpec","tangle.inject.compiler.AnnotationSpec"]},{"name":"fun AnnotationSpec(name: ClassName, block: AnnotationSpec.Builder.() -> Unit): AnnotationSpec","description":"tangle.inject.compiler.AnnotationSpec","location":"tangle-compiler/tangle.inject.compiler/-annotation-spec.html","searchKeys":["AnnotationSpec","fun AnnotationSpec(name: ClassName, block: AnnotationSpec.Builder.() -> Unit): AnnotationSpec","tangle.inject.compiler.AnnotationSpec"]},{"name":"fun CallableMemberDescriptor.hasAnnotation(annotationFqName: FqName): Boolean","description":"tangle.inject.compiler.hasAnnotation","location":"tangle-compiler/tangle.inject.compiler/has-annotation.html","searchKeys":["hasAnnotation","fun CallableMemberDescriptor.hasAnnotation(annotationFqName: FqName): Boolean","tangle.inject.compiler.hasAnnotation"]},{"name":"fun CallableMemberDescriptor.requireTangleParamName(): String","description":"tangle.inject.compiler.requireTangleParamName","location":"tangle-compiler/tangle.inject.compiler/require-tangle-param-name.html","searchKeys":["requireTangleParamName","fun CallableMemberDescriptor.requireTangleParamName(): String","tangle.inject.compiler.requireTangleParamName"]},{"name":"fun CallableMemberDescriptor.tangleParamNameOrNull(): String?","description":"tangle.inject.compiler.tangleParamNameOrNull","location":"tangle-compiler/tangle.inject.compiler/tangle-param-name-or-null.html","searchKeys":["tangleParamNameOrNull","fun CallableMemberDescriptor.tangleParamNameOrNull(): String?","tangle.inject.compiler.tangleParamNameOrNull"]},{"name":"fun ClassName.generateSimpleNameString(separator: String = \"_\"): String","description":"tangle.inject.compiler.generateSimpleNameString","location":"tangle-compiler/tangle.inject.compiler/generate-simple-name-string.html","searchKeys":["generateSimpleNameString","fun ClassName.generateSimpleNameString(separator: String = \"_\"): String","tangle.inject.compiler.generateSimpleNameString"]},{"name":"fun ClassReference.assistedInjectConstructor(): FunctionReference?","description":"tangle.inject.compiler.assistedInjectConstructor","location":"tangle-compiler/tangle.inject.compiler/assisted-inject-constructor.html","searchKeys":["assistedInjectConstructor","fun ClassReference.assistedInjectConstructor(): FunctionReference?","tangle.inject.compiler.assistedInjectConstructor"]},{"name":"fun ClassReference.fragmentInjectConstructor(): FunctionReference?","description":"tangle.inject.compiler.fragmentInjectConstructor","location":"tangle-compiler/tangle.inject.compiler/fragment-inject-constructor.html","searchKeys":["fragmentInjectConstructor","fun ClassReference.fragmentInjectConstructor(): FunctionReference?","tangle.inject.compiler.fragmentInjectConstructor"]},{"name":"fun ClassReference.injectConstructor(): FunctionReference?","description":"tangle.inject.compiler.injectConstructor","location":"tangle-compiler/tangle.inject.compiler/inject-constructor.html","searchKeys":["injectConstructor","fun ClassReference.injectConstructor(): FunctionReference?","tangle.inject.compiler.injectConstructor"]},{"name":"fun ClassReference.isFragment(): Boolean","description":"tangle.inject.compiler.isFragment","location":"tangle-compiler/tangle.inject.compiler/is-fragment.html","searchKeys":["isFragment","fun ClassReference.isFragment(): Boolean","tangle.inject.compiler.isFragment"]},{"name":"fun ClassReference.isViewModel(): Boolean","description":"tangle.inject.compiler.isViewModel","location":"tangle-compiler/tangle.inject.compiler/is-view-model.html","searchKeys":["isViewModel","fun ClassReference.isViewModel(): Boolean","tangle.inject.compiler.isViewModel"]},{"name":"fun ClassReference.memberInjectedParameters(): List<MemberInjectParameter>","description":"tangle.inject.compiler.memberInjectedParameters","location":"tangle-compiler/tangle.inject.compiler/member-injected-parameters.html","searchKeys":["memberInjectedParameters","fun ClassReference.memberInjectedParameters(): List<MemberInjectParameter>","tangle.inject.compiler.memberInjectedParameters"]},{"name":"fun ClassReference.vmInjectConstructor(): FunctionReference?","description":"tangle.inject.compiler.vmInjectConstructor","location":"tangle-compiler/tangle.inject.compiler/vm-inject-constructor.html","searchKeys":["vmInjectConstructor","fun ClassReference.vmInjectConstructor(): FunctionReference?","tangle.inject.compiler.vmInjectConstructor"]},{"name":"fun ConstructorInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, isDaggerAssisted: Boolean)","description":"tangle.inject.compiler.ConstructorInjectParameter.ConstructorInjectParameter","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/-constructor-inject-parameter.html","searchKeys":["ConstructorInjectParameter","fun ConstructorInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, isDaggerAssisted: Boolean)","tangle.inject.compiler.ConstructorInjectParameter.ConstructorInjectParameter"]},{"name":"fun DeclarationDescriptor.requireContainingPackage(): FqName","description":"tangle.inject.compiler.requireContainingPackage","location":"tangle-compiler/tangle.inject.compiler/require-containing-package.html","searchKeys":["requireContainingPackage","fun DeclarationDescriptor.requireContainingPackage(): FqName","tangle.inject.compiler.requireContainingPackage"]},{"name":"fun FileSpec.Companion.buildFile(packageName: String, fileName: String, block: FileSpec.Builder.() -> Unit): String","description":"tangle.inject.compiler.buildFile","location":"tangle-compiler/tangle.inject.compiler/build-file.html","searchKeys":["buildFile","fun FileSpec.Companion.buildFile(packageName: String, fileName: String, block: FileSpec.Builder.() -> Unit): String","tangle.inject.compiler.buildFile"]},{"name":"fun FunSpec(name: String, block: FunSpec.Builder.() -> Unit): FunSpec","description":"tangle.inject.compiler.FunSpec","location":"tangle-compiler/tangle.inject.compiler/-fun-spec.html","searchKeys":["FunSpec","fun FunSpec(name: String, block: FunSpec.Builder.() -> Unit): FunSpec","tangle.inject.compiler.FunSpec"]},{"name":"fun FunctionReference.hasAnnotation(fqName: FqName): Boolean","description":"tangle.inject.compiler.hasAnnotation","location":"tangle-compiler/tangle.inject.compiler/has-annotation.html","searchKeys":["hasAnnotation","fun FunctionReference.hasAnnotation(fqName: FqName): Boolean","tangle.inject.compiler.hasAnnotation"]},{"name":"fun KotlinType.fqNameOrNull(): FqName?","description":"tangle.inject.compiler.fqNameOrNull","location":"tangle-compiler/tangle.inject.compiler/fq-name-or-null.html","searchKeys":["fqNameOrNull","fun KotlinType.fqNameOrNull(): FqName?","tangle.inject.compiler.fqNameOrNull"]},{"name":"fun KotlinType.isNullable(): Boolean","description":"tangle.inject.compiler.isNullable","location":"tangle-compiler/tangle.inject.compiler/is-nullable.html","searchKeys":["isNullable","fun KotlinType.isNullable(): Boolean","tangle.inject.compiler.isNullable"]},{"name":"fun List<AnnotationDescriptor>.qualifierAnnotationSpecs(module: ModuleDescriptor): List<AnnotationSpec>","description":"tangle.inject.compiler.qualifierAnnotationSpecs","location":"tangle-compiler/tangle.inject.compiler/qualifier-annotation-specs.html","searchKeys":["qualifierAnnotationSpecs","fun List<AnnotationDescriptor>.qualifierAnnotationSpecs(module: ModuleDescriptor): List<AnnotationSpec>","tangle.inject.compiler.qualifierAnnotationSpecs"]},{"name":"fun List<AnnotationReference>.qualifierAnnotationSpecs(module: ModuleDescriptor): List<AnnotationSpec>","description":"tangle.inject.compiler.qualifierAnnotationSpecs","location":"tangle-compiler/tangle.inject.compiler/qualifier-annotation-specs.html","searchKeys":["qualifierAnnotationSpecs","fun List<AnnotationReference>.qualifierAnnotationSpecs(module: ModuleDescriptor): List<AnnotationSpec>","tangle.inject.compiler.qualifierAnnotationSpecs"]},{"name":"fun List<ConstructorInjectParameter>.uniqueName(base: String, attempt: Int = 0): String","description":"tangle.inject.compiler.uniqueName","location":"tangle-compiler/tangle.inject.compiler/unique-name.html","searchKeys":["uniqueName","fun List<ConstructorInjectParameter>.uniqueName(base: String, attempt: Int = 0): String","tangle.inject.compiler.uniqueName"]},{"name":"fun List<Parameter>.asArgumentList(asProvider: Boolean, includeModule: Boolean): String","description":"tangle.inject.compiler.asArgumentList","location":"tangle-compiler/tangle.inject.compiler/as-argument-list.html","searchKeys":["asArgumentList","fun List<Parameter>.asArgumentList(asProvider: Boolean, includeModule: Boolean): String","tangle.inject.compiler.asArgumentList"]},{"name":"fun List<ParameterReference>.mapToParameters(module: ModuleDescriptor): List<ConstructorInjectParameter>","description":"tangle.inject.compiler.mapToParameters","location":"tangle-compiler/tangle.inject.compiler/map-to-parameters.html","searchKeys":["mapToParameters","fun List<ParameterReference>.mapToParameters(module: ModuleDescriptor): List<ConstructorInjectParameter>","tangle.inject.compiler.mapToParameters"]},{"name":"fun List<String>.uniqueName(base: String, attempt: Int = 0): String","description":"tangle.inject.compiler.uniqueName","location":"tangle-compiler/tangle.inject.compiler/unique-name.html","searchKeys":["uniqueName","fun List<String>.uniqueName(base: String, attempt: Int = 0): String","tangle.inject.compiler.uniqueName"]},{"name":"fun MemberInjectCodeGenerator()","description":"tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.MemberInjectCodeGenerator","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-code-generator/-member-inject-code-generator.html","searchKeys":["MemberInjectCodeGenerator","fun MemberInjectCodeGenerator()","tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.MemberInjectCodeGenerator"]},{"name":"fun MemberInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, memberInjectorClass: ClassName)","description":"tangle.inject.compiler.MemberInjectParameter.MemberInjectParameter","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/-member-inject-parameter.html","searchKeys":["MemberInjectParameter","fun MemberInjectParameter(name: String, typeName: TypeName, providerTypeName: ParameterizedTypeName, lazyTypeName: ParameterizedTypeName, isWrappedInProvider: Boolean, isWrappedInLazy: Boolean, tangleParamName: String?, qualifiers: List<AnnotationSpec>, memberInjectorClass: ClassName)","tangle.inject.compiler.MemberInjectParameter.MemberInjectParameter"]},{"name":"fun MemberInjectParams(scopeClassName: ClassName, packageName: String, injectedClassName: ClassName, userScopeModuleName: String, userScopeModuleClassName: ClassName, tangleAppScopeModuleClassName: ClassName, injectorName: String, injectorClassName: ClassName, hasInjectedMembers: Boolean)","description":"tangle.inject.compiler.memberInject.MemberInjectParams.MemberInjectParams","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/-member-inject-params.html","searchKeys":["MemberInjectParams","fun MemberInjectParams(scopeClassName: ClassName, packageName: String, injectedClassName: ClassName, userScopeModuleName: String, userScopeModuleClassName: ClassName, tangleAppScopeModuleClassName: ClassName, injectorName: String, injectorClassName: ClassName, hasInjectedMembers: Boolean)","tangle.inject.compiler.memberInject.MemberInjectParams.MemberInjectParams"]},{"name":"fun MemberScope.memberInjectedProperties(): List<PropertyDescriptor>","description":"tangle.inject.compiler.memberInjectedProperties","location":"tangle-compiler/tangle.inject.compiler/member-injected-properties.html","searchKeys":["memberInjectedProperties","fun MemberScope.memberInjectedProperties(): List<PropertyDescriptor>","tangle.inject.compiler.memberInjectedProperties"]},{"name":"fun MergeComponentParams(module: ModuleDescriptor, packageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: KtClassOrObject, componentClassName: ClassName, providerComponentClassName: ClassName, memberInjectToScopeMapProviderSubcomponentClassName: ClassName, mergeComponentTangleInjectorModuleClassName: ClassName, scopeToComponentModuleClassName: ClassName, originalComponentClassName: ClassName, scopeQualifier: AnnotationSpec, forSubcomponent: Boolean)","description":"tangle.inject.compiler.components.MergeComponentParams.MergeComponentParams","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/-merge-component-params.html","searchKeys":["MergeComponentParams","fun MergeComponentParams(module: ModuleDescriptor, packageName: String, scopeFqName: FqName, scopeClassName: ClassName, componentClass: KtClassOrObject, componentClassName: ClassName, providerComponentClassName: ClassName, memberInjectToScopeMapProviderSubcomponentClassName: ClassName, mergeComponentTangleInjectorModuleClassName: ClassName, scopeToComponentModuleClassName: ClassName, originalComponentClassName: ClassName, scopeQualifier: AnnotationSpec, forSubcomponent: Boolean)","tangle.inject.compiler.components.MergeComponentParams.MergeComponentParams"]},{"name":"fun ParameterReference.requireTangleParamName(): String","description":"tangle.inject.compiler.requireTangleParamName","location":"tangle-compiler/tangle.inject.compiler/require-tangle-param-name.html","searchKeys":["requireTangleParamName","fun ParameterReference.requireTangleParamName(): String","tangle.inject.compiler.requireTangleParamName"]},{"name":"fun ParameterReference.tangleParamNameOrNull(): String?","description":"tangle.inject.compiler.tangleParamNameOrNull","location":"tangle-compiler/tangle.inject.compiler/tangle-param-name-or-null.html","searchKeys":["tangleParamNameOrNull","fun ParameterReference.tangleParamNameOrNull(): String?","tangle.inject.compiler.tangleParamNameOrNull"]},{"name":"fun PropertyDescriptor.hasAnnotation(annotationFqName: FqName): Boolean","description":"tangle.inject.compiler.hasAnnotation","location":"tangle-compiler/tangle.inject.compiler/has-annotation.html","searchKeys":["hasAnnotation","fun PropertyDescriptor.hasAnnotation(annotationFqName: FqName): Boolean","tangle.inject.compiler.hasAnnotation"]},{"name":"fun PropertyDescriptor.isNullable(): Boolean","description":"tangle.inject.compiler.isNullable","location":"tangle-compiler/tangle.inject.compiler/is-nullable.html","searchKeys":["isNullable","fun PropertyDescriptor.isNullable(): Boolean","tangle.inject.compiler.isNullable"]},{"name":"fun PropertyReference.tangleParamNameOrNull(): String?","description":"tangle.inject.compiler.tangleParamNameOrNull","location":"tangle-compiler/tangle.inject.compiler/tangle-param-name-or-null.html","searchKeys":["tangleParamNameOrNull","fun PropertyReference.tangleParamNameOrNull(): String?","tangle.inject.compiler.tangleParamNameOrNull"]},{"name":"fun PropertyReference.toMemberInjectParameter(uniqueName: String): MemberInjectParameter","description":"tangle.inject.compiler.toMemberInjectParameter","location":"tangle-compiler/tangle.inject.compiler/to-member-inject-parameter.html","searchKeys":["toMemberInjectParameter","fun PropertyReference.toMemberInjectParameter(uniqueName: String): MemberInjectParameter","tangle.inject.compiler.toMemberInjectParameter"]},{"name":"fun TangleCodeGenerator()","description":"tangle.inject.compiler.TangleCodeGenerator.TangleCodeGenerator","location":"tangle-compiler/tangle.inject.compiler/-tangle-code-generator/-tangle-code-generator.html","searchKeys":["TangleCodeGenerator","fun TangleCodeGenerator()","tangle.inject.compiler.TangleCodeGenerator.TangleCodeGenerator"]},{"name":"fun TangleCompilationException(annotationDescriptor: AnnotationDescriptor, message: String, cause: Throwable? = null)","description":"tangle.inject.compiler.TangleCompilationException.TangleCompilationException","location":"tangle-compiler/tangle.inject.compiler/-tangle-compilation-exception/-tangle-compilation-exception.html","searchKeys":["TangleCompilationException","fun TangleCompilationException(annotationDescriptor: AnnotationDescriptor, message: String, cause: Throwable? = null)","tangle.inject.compiler.TangleCompilationException.TangleCompilationException"]},{"name":"fun TangleCompilationException(classReference: ClassReference, message: String, cause: Throwable? = null)","description":"tangle.inject.compiler.TangleCompilationException.TangleCompilationException","location":"tangle-compiler/tangle.inject.compiler/-tangle-compilation-exception/-tangle-compilation-exception.html","searchKeys":["TangleCompilationException","fun TangleCompilationException(classReference: ClassReference, message: String, cause: Throwable? = null)","tangle.inject.compiler.TangleCompilationException.TangleCompilationException"]},{"name":"fun TangleCompilationException(declarationDescriptor: DeclarationDescriptor, message: String, cause: Throwable? = null)","description":"tangle.inject.compiler.TangleCompilationException.TangleCompilationException","location":"tangle-compiler/tangle.inject.compiler/-tangle-compilation-exception/-tangle-compilation-exception.html","searchKeys":["TangleCompilationException","fun TangleCompilationException(declarationDescriptor: DeclarationDescriptor, message: String, cause: Throwable? = null)","tangle.inject.compiler.TangleCompilationException.TangleCompilationException"]},{"name":"fun TangleCompilationException(message: String, cause: Throwable? = null, element: PsiElement? = null)","description":"tangle.inject.compiler.TangleCompilationException.TangleCompilationException","location":"tangle-compiler/tangle.inject.compiler/-tangle-compilation-exception/-tangle-compilation-exception.html","searchKeys":["TangleCompilationException","fun TangleCompilationException(message: String, cause: Throwable? = null, element: PsiElement? = null)","tangle.inject.compiler.TangleCompilationException.TangleCompilationException"]},{"name":"fun TangleInjectorMergeComponentCodeGenerator()","description":"tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.TangleInjectorMergeComponentCodeGenerator","location":"tangle-compiler/tangle.inject.compiler.components/-tangle-injector-merge-component-code-generator/-tangle-injector-merge-component-code-generator.html","searchKeys":["TangleInjectorMergeComponentCodeGenerator","fun TangleInjectorMergeComponentCodeGenerator()","tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.TangleInjectorMergeComponentCodeGenerator"]},{"name":"fun TypeName.wrapInLazy(): ParameterizedTypeName","description":"tangle.inject.compiler.wrapInLazy","location":"tangle-compiler/tangle.inject.compiler/wrap-in-lazy.html","searchKeys":["wrapInLazy","fun TypeName.wrapInLazy(): ParameterizedTypeName","tangle.inject.compiler.wrapInLazy"]},{"name":"fun TypeName.wrapInProvider(): ParameterizedTypeName","description":"tangle.inject.compiler.wrapInProvider","location":"tangle-compiler/tangle.inject.compiler/wrap-in-provider.html","searchKeys":["wrapInProvider","fun TypeName.wrapInProvider(): ParameterizedTypeName","tangle.inject.compiler.wrapInProvider"]},{"name":"fun TypeParameterDescriptor.boundClassName(): ClassName","description":"tangle.inject.compiler.boundClassName","location":"tangle-compiler/tangle.inject.compiler/bound-class-name.html","searchKeys":["boundClassName","fun TypeParameterDescriptor.boundClassName(): ClassName","tangle.inject.compiler.boundClassName"]},{"name":"fun TypeSpec.Builder.addContributesTo(scopeClassName: ClassName): TypeSpec.Builder","description":"tangle.inject.compiler.addContributesTo","location":"tangle-compiler/tangle.inject.compiler/add-contributes-to.html","searchKeys":["addContributesTo","fun TypeSpec.Builder.addContributesTo(scopeClassName: ClassName): TypeSpec.Builder","tangle.inject.compiler.addContributesTo"]},{"name":"fun TypeSpec.Builder.addFunction(name: String, block: FunSpec.Builder.() -> Unit): TypeSpec.Builder","description":"tangle.inject.compiler.addFunction","location":"tangle-compiler/tangle.inject.compiler/add-function.html","searchKeys":["addFunction","fun TypeSpec.Builder.addFunction(name: String, block: FunSpec.Builder.() -> Unit): TypeSpec.Builder","tangle.inject.compiler.addFunction"]},{"name":"fun create(clazz: ClassReference, annotationEntry: AnnotationReference): MemberInjectParams","description":"tangle.inject.compiler.memberInject.MemberInjectParams.Companion.create","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/-companion/create.html","searchKeys":["create","fun create(clazz: ClassReference, annotationEntry: AnnotationReference): MemberInjectParams","tangle.inject.compiler.memberInject.MemberInjectParams.Companion.create"]},{"name":"fun create(module: ModuleDescriptor, scopeFqName: FqName, clazz: KtClassOrObject, forSubcomponent: Boolean): MergeComponentParams","description":"tangle.inject.compiler.components.MergeComponentParams.Companion.create","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/-companion/create.html","searchKeys":["create","fun create(module: ModuleDescriptor, scopeFqName: FqName, clazz: KtClassOrObject, forSubcomponent: Boolean): MergeComponentParams","tangle.inject.compiler.components.MergeComponentParams.Companion.create"]},{"name":"fun interface FileGenerator<T>","description":"tangle.inject.compiler.FileGenerator","location":"tangle-compiler/tangle.inject.compiler/-file-generator/index.html","searchKeys":["FileGenerator","fun interface FileGenerator<T>","tangle.inject.compiler.FileGenerator"]},{"name":"inline fun <T : Any, E> T.applyEach(elements: Iterable<E>, block: T.(E) -> Unit): T","description":"tangle.inject.compiler.applyEach","location":"tangle-compiler/tangle.inject.compiler/apply-each.html","searchKeys":["applyEach","inline fun <T : Any, E> T.applyEach(elements: Iterable<E>, block: T.(E) -> Unit): T","tangle.inject.compiler.applyEach"]},{"name":"inline fun <T> T.applyIf(predicate: Boolean, body: T.() -> T): T","description":"tangle.inject.compiler.applyIf","location":"tangle-compiler/tangle.inject.compiler/apply-if.html","searchKeys":["applyIf","inline fun <T> T.applyIf(predicate: Boolean, body: T.() -> T): T","tangle.inject.compiler.applyIf"]},{"name":"inline fun require(value: Boolean, annotationDescriptor: AnnotationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, annotationDescriptor: AnnotationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"inline fun require(value: Boolean, classReference: ClassReference, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, classReference: ClassReference, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"inline fun require(value: Boolean, declarationDescriptor: () -> DeclarationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, declarationDescriptor: () -> DeclarationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"inline fun require(value: Boolean, declarationDescriptor: DeclarationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, declarationDescriptor: DeclarationDescriptor, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"inline fun require(value: Boolean, element: PsiElement? = null, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, element: PsiElement? = null, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"inline fun require(value: Boolean, psi: () -> PsiElement, cause: Throwable? = null, lazyMessage: () -> String)","description":"tangle.inject.compiler.require","location":"tangle-compiler/tangle.inject.compiler/require.html","searchKeys":["require","inline fun require(value: Boolean, psi: () -> PsiElement, cause: Throwable? = null, lazyMessage: () -> String)","tangle.inject.compiler.require"]},{"name":"object ClassNames","description":"tangle.inject.compiler.ClassNames","location":"tangle-compiler/tangle.inject.compiler/-class-names/index.html","searchKeys":["ClassNames","object ClassNames","tangle.inject.compiler.ClassNames"]},{"name":"object Companion","description":"tangle.inject.compiler.FileGenerator.Companion","location":"tangle-compiler/tangle.inject.compiler/-file-generator/-companion/index.html","searchKeys":["Companion","object Companion","tangle.inject.compiler.FileGenerator.Companion"]},{"name":"object Companion","description":"tangle.inject.compiler.components.MergeComponentParams.Companion","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.inject.compiler.components.MergeComponentParams.Companion"]},{"name":"object Companion","description":"tangle.inject.compiler.memberInject.MemberInjectParams.Companion","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/-companion/index.html","searchKeys":["Companion","object Companion","tangle.inject.compiler.memberInject.MemberInjectParams.Companion"]},{"name":"object FqNames","description":"tangle.inject.compiler.FqNames","location":"tangle-compiler/tangle.inject.compiler/-fq-names/index.html","searchKeys":["FqNames","object FqNames","tangle.inject.compiler.FqNames"]},{"name":"object MemberNames","description":"tangle.inject.compiler.MemberNames","location":"tangle-compiler/tangle.inject.compiler/-member-names/index.html","searchKeys":["MemberNames","object MemberNames","tangle.inject.compiler.MemberNames"]},{"name":"open fun createGeneratedFile(codeGenDir: File, packageName: String, fileName: String, content: String): GeneratedFile","description":"tangle.inject.compiler.FileGenerator.createGeneratedFile","location":"tangle-compiler/tangle.inject.compiler/-file-generator/create-generated-file.html","searchKeys":["createGeneratedFile","open fun createGeneratedFile(codeGenDir: File, packageName: String, fileName: String, content: String): GeneratedFile","tangle.inject.compiler.FileGenerator.createGeneratedFile"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.generateTangleCode","location":"tangle-compiler/tangle.inject.compiler.components/-tangle-injector-merge-component-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.generateTangleCode"]},{"name":"open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.generateTangleCode","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-code-generator/generate-tangle-code.html","searchKeys":["generateTangleCode","open override fun generateTangleCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.generateTangleCode"]},{"name":"open override val isWrappedInLazy: Boolean","description":"tangle.inject.compiler.ConstructorInjectParameter.isWrappedInLazy","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/is-wrapped-in-lazy.html","searchKeys":["isWrappedInLazy","open override val isWrappedInLazy: Boolean","tangle.inject.compiler.ConstructorInjectParameter.isWrappedInLazy"]},{"name":"open override val isWrappedInLazy: Boolean","description":"tangle.inject.compiler.MemberInjectParameter.isWrappedInLazy","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/is-wrapped-in-lazy.html","searchKeys":["isWrappedInLazy","open override val isWrappedInLazy: Boolean","tangle.inject.compiler.MemberInjectParameter.isWrappedInLazy"]},{"name":"open override val isWrappedInProvider: Boolean","description":"tangle.inject.compiler.ConstructorInjectParameter.isWrappedInProvider","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/is-wrapped-in-provider.html","searchKeys":["isWrappedInProvider","open override val isWrappedInProvider: Boolean","tangle.inject.compiler.ConstructorInjectParameter.isWrappedInProvider"]},{"name":"open override val isWrappedInProvider: Boolean","description":"tangle.inject.compiler.MemberInjectParameter.isWrappedInProvider","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/is-wrapped-in-provider.html","searchKeys":["isWrappedInProvider","open override val isWrappedInProvider: Boolean","tangle.inject.compiler.MemberInjectParameter.isWrappedInProvider"]},{"name":"open override val lazyTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.ConstructorInjectParameter.lazyTypeName","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/lazy-type-name.html","searchKeys":["lazyTypeName","open override val lazyTypeName: ParameterizedTypeName","tangle.inject.compiler.ConstructorInjectParameter.lazyTypeName"]},{"name":"open override val lazyTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.MemberInjectParameter.lazyTypeName","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/lazy-type-name.html","searchKeys":["lazyTypeName","open override val lazyTypeName: ParameterizedTypeName","tangle.inject.compiler.MemberInjectParameter.lazyTypeName"]},{"name":"open override val name: String","description":"tangle.inject.compiler.ConstructorInjectParameter.name","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/name.html","searchKeys":["name","open override val name: String","tangle.inject.compiler.ConstructorInjectParameter.name"]},{"name":"open override val name: String","description":"tangle.inject.compiler.MemberInjectParameter.name","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/name.html","searchKeys":["name","open override val name: String","tangle.inject.compiler.MemberInjectParameter.name"]},{"name":"open override val providerTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.ConstructorInjectParameter.providerTypeName","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/provider-type-name.html","searchKeys":["providerTypeName","open override val providerTypeName: ParameterizedTypeName","tangle.inject.compiler.ConstructorInjectParameter.providerTypeName"]},{"name":"open override val providerTypeName: ParameterizedTypeName","description":"tangle.inject.compiler.MemberInjectParameter.providerTypeName","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/provider-type-name.html","searchKeys":["providerTypeName","open override val providerTypeName: ParameterizedTypeName","tangle.inject.compiler.MemberInjectParameter.providerTypeName"]},{"name":"open override val qualifiers: List<AnnotationSpec>","description":"tangle.inject.compiler.ConstructorInjectParameter.qualifiers","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/qualifiers.html","searchKeys":["qualifiers","open override val qualifiers: List<AnnotationSpec>","tangle.inject.compiler.ConstructorInjectParameter.qualifiers"]},{"name":"open override val qualifiers: List<AnnotationSpec>","description":"tangle.inject.compiler.MemberInjectParameter.qualifiers","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/qualifiers.html","searchKeys":["qualifiers","open override val qualifiers: List<AnnotationSpec>","tangle.inject.compiler.MemberInjectParameter.qualifiers"]},{"name":"open override val tangleParamName: String?","description":"tangle.inject.compiler.ConstructorInjectParameter.tangleParamName","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/tangle-param-name.html","searchKeys":["tangleParamName","open override val tangleParamName: String?","tangle.inject.compiler.ConstructorInjectParameter.tangleParamName"]},{"name":"open override val tangleParamName: String?","description":"tangle.inject.compiler.MemberInjectParameter.tangleParamName","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/tangle-param-name.html","searchKeys":["tangleParamName","open override val tangleParamName: String?","tangle.inject.compiler.MemberInjectParameter.tangleParamName"]},{"name":"open override val typeName: TypeName","description":"tangle.inject.compiler.ConstructorInjectParameter.typeName","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/type-name.html","searchKeys":["typeName","open override val typeName: TypeName","tangle.inject.compiler.ConstructorInjectParameter.typeName"]},{"name":"open override val typeName: TypeName","description":"tangle.inject.compiler.MemberInjectParameter.typeName","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/type-name.html","searchKeys":["typeName","open override val typeName: TypeName","tangle.inject.compiler.MemberInjectParameter.typeName"]},{"name":"override fun generateCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","description":"tangle.inject.compiler.TangleCodeGenerator.generateCode","location":"tangle-compiler/tangle.inject.compiler/-tangle-code-generator/generate-code.html","searchKeys":["generateCode","override fun generateCode(codeGenDir: File, module: ModuleDescriptor, projectFiles: Collection<KtFile>): Collection<GeneratedFile>","tangle.inject.compiler.TangleCodeGenerator.generateCode"]},{"name":"override fun isApplicable(context: AnvilContext): Boolean","description":"tangle.inject.compiler.TangleCodeGenerator.isApplicable","location":"tangle-compiler/tangle.inject.compiler/-tangle-code-generator/is-applicable.html","searchKeys":["isApplicable","override fun isApplicable(context: AnvilContext): Boolean","tangle.inject.compiler.TangleCodeGenerator.isApplicable"]},{"name":"sealed class Parameter","description":"tangle.inject.compiler.Parameter","location":"tangle-compiler/tangle.inject.compiler/-parameter/index.html","searchKeys":["Parameter","sealed class Parameter","tangle.inject.compiler.Parameter"]},{"name":"val AnnotationDescriptor.identifier: PsiElement?","description":"tangle.inject.compiler.identifier","location":"tangle-compiler/tangle.inject.compiler/identifier.html","searchKeys":["identifier","val AnnotationDescriptor.identifier: PsiElement?","tangle.inject.compiler.identifier"]},{"name":"val ClassDescriptor.identifier: PsiElement?","description":"tangle.inject.compiler.identifier","location":"tangle-compiler/tangle.inject.compiler/identifier.html","searchKeys":["identifier","val ClassDescriptor.identifier: PsiElement?","tangle.inject.compiler.identifier"]},{"name":"val androidContext: ClassName","description":"tangle.inject.compiler.ClassNames.androidContext","location":"tangle-compiler/tangle.inject.compiler/-class-names/android-context.html","searchKeys":["androidContext","val androidContext: ClassName","tangle.inject.compiler.ClassNames.androidContext"]},{"name":"val androidxFragment: FqName","description":"tangle.inject.compiler.FqNames.androidxFragment","location":"tangle-compiler/tangle.inject.compiler/-fq-names/androidx-fragment.html","searchKeys":["androidxFragment","val androidxFragment: FqName","tangle.inject.compiler.FqNames.androidxFragment"]},{"name":"val androidxViewModel: FqName","description":"tangle.inject.compiler.FqNames.androidxViewModel","location":"tangle-compiler/tangle.inject.compiler/-fq-names/androidx-view-model.html","searchKeys":["androidxViewModel","val androidxViewModel: FqName","tangle.inject.compiler.FqNames.androidxViewModel"]},{"name":"val assistedInject: FqName","description":"tangle.inject.compiler.FqNames.assistedInject","location":"tangle-compiler/tangle.inject.compiler/-fq-names/assisted-inject.html","searchKeys":["assistedInject","val assistedInject: FqName","tangle.inject.compiler.FqNames.assistedInject"]},{"name":"val binds: ClassName","description":"tangle.inject.compiler.ClassNames.binds","location":"tangle-compiler/tangle.inject.compiler/-class-names/binds.html","searchKeys":["binds","val binds: ClassName","tangle.inject.compiler.ClassNames.binds"]},{"name":"val bindsInstance: ClassName","description":"tangle.inject.compiler.ClassNames.bindsInstance","location":"tangle-compiler/tangle.inject.compiler/-class-names/binds-instance.html","searchKeys":["bindsInstance","val bindsInstance: ClassName","tangle.inject.compiler.ClassNames.bindsInstance"]},{"name":"val bundle: ClassName","description":"tangle.inject.compiler.ClassNames.bundle","location":"tangle-compiler/tangle.inject.compiler/-class-names/bundle.html","searchKeys":["bundle","val bundle: ClassName","tangle.inject.compiler.ClassNames.bundle"]},{"name":"val bundle: FqName","description":"tangle.inject.compiler.FqNames.bundle","location":"tangle-compiler/tangle.inject.compiler/-fq-names/bundle.html","searchKeys":["bundle","val bundle: FqName","tangle.inject.compiler.FqNames.bundle"]},{"name":"val bundleOf: MemberName","description":"tangle.inject.compiler.MemberNames.bundleOf","location":"tangle-compiler/tangle.inject.compiler/-member-names/bundle-of.html","searchKeys":["bundleOf","val bundleOf: MemberName","tangle.inject.compiler.MemberNames.bundleOf"]},{"name":"val classKey: ClassName","description":"tangle.inject.compiler.ClassNames.classKey","location":"tangle-compiler/tangle.inject.compiler/-class-names/class-key.html","searchKeys":["classKey","val classKey: ClassName","tangle.inject.compiler.ClassNames.classKey"]},{"name":"val componentClass: KtClassOrObject","description":"tangle.inject.compiler.components.MergeComponentParams.componentClass","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/component-class.html","searchKeys":["componentClass","val componentClass: KtClassOrObject","tangle.inject.compiler.components.MergeComponentParams.componentClass"]},{"name":"val componentClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.componentClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/component-class-name.html","searchKeys":["componentClassName","val componentClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.componentClassName"]},{"name":"val context: FqName","description":"tangle.inject.compiler.FqNames.context","location":"tangle-compiler/tangle.inject.compiler/-fq-names/context.html","searchKeys":["context","val context: FqName","tangle.inject.compiler.FqNames.context"]},{"name":"val contributesFragment: FqName","description":"tangle.inject.compiler.FqNames.contributesFragment","location":"tangle-compiler/tangle.inject.compiler/-fq-names/contributes-fragment.html","searchKeys":["contributesFragment","val contributesFragment: FqName","tangle.inject.compiler.FqNames.contributesFragment"]},{"name":"val contributesTo: ClassName","description":"tangle.inject.compiler.ClassNames.contributesTo","location":"tangle-compiler/tangle.inject.compiler/-class-names/contributes-to.html","searchKeys":["contributesTo","val contributesTo: ClassName","tangle.inject.compiler.ClassNames.contributesTo"]},{"name":"val contributesViewModel: FqName","description":"tangle.inject.compiler.FqNames.contributesViewModel","location":"tangle-compiler/tangle.inject.compiler/-fq-names/contributes-view-model.html","searchKeys":["contributesViewModel","val contributesViewModel: FqName","tangle.inject.compiler.FqNames.contributesViewModel"]},{"name":"val daggerAssisted: FqName","description":"tangle.inject.compiler.FqNames.daggerAssisted","location":"tangle-compiler/tangle.inject.compiler/-fq-names/dagger-assisted.html","searchKeys":["daggerAssisted","val daggerAssisted: FqName","tangle.inject.compiler.FqNames.daggerAssisted"]},{"name":"val daggerDoubleCheck: String","description":"tangle.inject.compiler.FqNames.daggerDoubleCheck","location":"tangle-compiler/tangle.inject.compiler/-fq-names/dagger-double-check.html","searchKeys":["daggerDoubleCheck","val daggerDoubleCheck: String","tangle.inject.compiler.FqNames.daggerDoubleCheck"]},{"name":"val daggerFactory: ClassName","description":"tangle.inject.compiler.ClassNames.daggerFactory","location":"tangle-compiler/tangle.inject.compiler/-class-names/dagger-factory.html","searchKeys":["daggerFactory","val daggerFactory: ClassName","tangle.inject.compiler.ClassNames.daggerFactory"]},{"name":"val daggerFactory: String","description":"tangle.inject.compiler.FqNames.daggerFactory","location":"tangle-compiler/tangle.inject.compiler/-fq-names/dagger-factory.html","searchKeys":["daggerFactory","val daggerFactory: String","tangle.inject.compiler.FqNames.daggerFactory"]},{"name":"val daggerLazy: FqName","description":"tangle.inject.compiler.FqNames.daggerLazy","location":"tangle-compiler/tangle.inject.compiler/-fq-names/dagger-lazy.html","searchKeys":["daggerLazy","val daggerLazy: FqName","tangle.inject.compiler.FqNames.daggerLazy"]},{"name":"val daggerProvides: FqName","description":"tangle.inject.compiler.FqNames.daggerProvides","location":"tangle-compiler/tangle.inject.compiler/-fq-names/dagger-provides.html","searchKeys":["daggerProvides","val daggerProvides: FqName","tangle.inject.compiler.FqNames.daggerProvides"]},{"name":"val fileGenerators: List<FileGenerator<MemberInjectParams>>","description":"tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.fileGenerators","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-code-generator/file-generators.html","searchKeys":["fileGenerators","val fileGenerators: List<FileGenerator<MemberInjectParams>>","tangle.inject.compiler.memberInject.MemberInjectCodeGenerator.fileGenerators"]},{"name":"val fileGenerators: List<FileGenerator<MergeComponentParams>>","description":"tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.fileGenerators","location":"tangle-compiler/tangle.inject.compiler.components/-tangle-injector-merge-component-code-generator/file-generators.html","searchKeys":["fileGenerators","val fileGenerators: List<FileGenerator<MergeComponentParams>>","tangle.inject.compiler.components.TangleInjectorMergeComponentCodeGenerator.fileGenerators"]},{"name":"val forSubcomponent: Boolean","description":"tangle.inject.compiler.components.MergeComponentParams.forSubcomponent","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/for-subcomponent.html","searchKeys":["forSubcomponent","val forSubcomponent: Boolean","tangle.inject.compiler.components.MergeComponentParams.forSubcomponent"]},{"name":"val fragmentInject: FqName","description":"tangle.inject.compiler.FqNames.fragmentInject","location":"tangle-compiler/tangle.inject.compiler/-fq-names/fragment-inject.html","searchKeys":["fragmentInject","val fragmentInject: FqName","tangle.inject.compiler.FqNames.fragmentInject"]},{"name":"val fragmentInjectFactory: FqName","description":"tangle.inject.compiler.FqNames.fragmentInjectFactory","location":"tangle-compiler/tangle.inject.compiler/-fq-names/fragment-inject-factory.html","searchKeys":["fragmentInjectFactory","val fragmentInjectFactory: FqName","tangle.inject.compiler.FqNames.fragmentInjectFactory"]},{"name":"val hasInjectedMembers: Boolean","description":"tangle.inject.compiler.memberInject.MemberInjectParams.hasInjectedMembers","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/has-injected-members.html","searchKeys":["hasInjectedMembers","val hasInjectedMembers: Boolean","tangle.inject.compiler.memberInject.MemberInjectParams.hasInjectedMembers"]},{"name":"val iBinder: ClassName","description":"tangle.inject.compiler.ClassNames.iBinder","location":"tangle-compiler/tangle.inject.compiler/-class-names/i-binder.html","searchKeys":["iBinder","val iBinder: ClassName","tangle.inject.compiler.ClassNames.iBinder"]},{"name":"val iBinder: FqName","description":"tangle.inject.compiler.FqNames.iBinder","location":"tangle-compiler/tangle.inject.compiler/-fq-names/i-binder.html","searchKeys":["iBinder","val iBinder: FqName","tangle.inject.compiler.FqNames.iBinder"]},{"name":"val inject: ClassName","description":"tangle.inject.compiler.ClassNames.inject","location":"tangle-compiler/tangle.inject.compiler/-class-names/inject.html","searchKeys":["inject","val inject: ClassName","tangle.inject.compiler.ClassNames.inject"]},{"name":"val inject: FqName","description":"tangle.inject.compiler.FqNames.inject","location":"tangle-compiler/tangle.inject.compiler/-fq-names/inject.html","searchKeys":["inject","val inject: FqName","tangle.inject.compiler.FqNames.inject"]},{"name":"val injectedClassName: ClassName","description":"tangle.inject.compiler.memberInject.MemberInjectParams.injectedClassName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/injected-class-name.html","searchKeys":["injectedClassName","val injectedClassName: ClassName","tangle.inject.compiler.memberInject.MemberInjectParams.injectedClassName"]},{"name":"val injectorClassName: ClassName","description":"tangle.inject.compiler.memberInject.MemberInjectParams.injectorClassName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/injector-class-name.html","searchKeys":["injectorClassName","val injectorClassName: ClassName","tangle.inject.compiler.memberInject.MemberInjectParams.injectorClassName"]},{"name":"val injectorName: String","description":"tangle.inject.compiler.memberInject.MemberInjectParams.injectorName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/injector-name.html","searchKeys":["injectorName","val injectorName: String","tangle.inject.compiler.memberInject.MemberInjectParams.injectorName"]},{"name":"val instanceFactory: ClassName","description":"tangle.inject.compiler.ClassNames.instanceFactory","location":"tangle-compiler/tangle.inject.compiler/-class-names/instance-factory.html","searchKeys":["instanceFactory","val instanceFactory: ClassName","tangle.inject.compiler.ClassNames.instanceFactory"]},{"name":"val internalTangleApi: ClassName","description":"tangle.inject.compiler.ClassNames.internalTangleApi","location":"tangle-compiler/tangle.inject.compiler/-class-names/internal-tangle-api.html","searchKeys":["internalTangleApi","val internalTangleApi: ClassName","tangle.inject.compiler.ClassNames.internalTangleApi"]},{"name":"val intoMap: ClassName","description":"tangle.inject.compiler.ClassNames.intoMap","location":"tangle-compiler/tangle.inject.compiler/-class-names/into-map.html","searchKeys":["intoMap","val intoMap: ClassName","tangle.inject.compiler.ClassNames.intoMap"]},{"name":"val intoSet: ClassName","description":"tangle.inject.compiler.ClassNames.intoSet","location":"tangle-compiler/tangle.inject.compiler/-class-names/into-set.html","searchKeys":["intoSet","val intoSet: ClassName","tangle.inject.compiler.ClassNames.intoSet"]},{"name":"val isDaggerAssisted: Boolean","description":"tangle.inject.compiler.ConstructorInjectParameter.isDaggerAssisted","location":"tangle-compiler/tangle.inject.compiler/-constructor-inject-parameter/is-dagger-assisted.html","searchKeys":["isDaggerAssisted","val isDaggerAssisted: Boolean","tangle.inject.compiler.ConstructorInjectParameter.isDaggerAssisted"]},{"name":"val isTangleParam: Boolean","description":"tangle.inject.compiler.Parameter.isTangleParam","location":"tangle-compiler/tangle.inject.compiler/-parameter/is-tangle-param.html","searchKeys":["isTangleParam","val isTangleParam: Boolean","tangle.inject.compiler.Parameter.isTangleParam"]},{"name":"val javaClassToClassMap: ParameterizedTypeName","description":"tangle.inject.compiler.ClassNames.javaClassToClassMap","location":"tangle-compiler/tangle.inject.compiler/-class-names/java-class-to-class-map.html","searchKeys":["javaClassToClassMap","val javaClassToClassMap: ParameterizedTypeName","tangle.inject.compiler.ClassNames.javaClassToClassMap"]},{"name":"val javaClassWildcard: ParameterizedTypeName","description":"tangle.inject.compiler.ClassNames.javaClassWildcard","location":"tangle-compiler/tangle.inject.compiler/-class-names/java-class-wildcard.html","searchKeys":["javaClassWildcard","val javaClassWildcard: ParameterizedTypeName","tangle.inject.compiler.ClassNames.javaClassWildcard"]},{"name":"val jvmStatic: ClassName","description":"tangle.inject.compiler.ClassNames.jvmStatic","location":"tangle-compiler/tangle.inject.compiler/-class-names/jvm-static.html","searchKeys":["jvmStatic","val jvmStatic: ClassName","tangle.inject.compiler.ClassNames.jvmStatic"]},{"name":"val jvmSuppressWildcards: FqName","description":"tangle.inject.compiler.FqNames.jvmSuppressWildcards","location":"tangle-compiler/tangle.inject.compiler/-fq-names/jvm-suppress-wildcards.html","searchKeys":["jvmSuppressWildcards","val jvmSuppressWildcards: FqName","tangle.inject.compiler.FqNames.jvmSuppressWildcards"]},{"name":"val memberInjectToScopeMapProviderSubcomponentClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.memberInjectToScopeMapProviderSubcomponentClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/member-inject-to-scope-map-provider-subcomponent-class-name.html","searchKeys":["memberInjectToScopeMapProviderSubcomponentClassName","val memberInjectToScopeMapProviderSubcomponentClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.memberInjectToScopeMapProviderSubcomponentClassName"]},{"name":"val memberInjectorClass: ClassName","description":"tangle.inject.compiler.MemberInjectParameter.memberInjectorClass","location":"tangle-compiler/tangle.inject.compiler/-member-inject-parameter/member-injector-class.html","searchKeys":["memberInjectorClass","val memberInjectorClass: ClassName","tangle.inject.compiler.MemberInjectParameter.memberInjectorClass"]},{"name":"val mergeComponent: ClassName","description":"tangle.inject.compiler.ClassNames.mergeComponent","location":"tangle-compiler/tangle.inject.compiler/-class-names/merge-component.html","searchKeys":["mergeComponent","val mergeComponent: ClassName","tangle.inject.compiler.ClassNames.mergeComponent"]},{"name":"val mergeComponent: FqName","description":"tangle.inject.compiler.FqNames.mergeComponent","location":"tangle-compiler/tangle.inject.compiler/-fq-names/merge-component.html","searchKeys":["mergeComponent","val mergeComponent: FqName","tangle.inject.compiler.FqNames.mergeComponent"]},{"name":"val mergeComponentTangleInjectorModuleClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.mergeComponentTangleInjectorModuleClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/merge-component-tangle-injector-module-class-name.html","searchKeys":["mergeComponentTangleInjectorModuleClassName","val mergeComponentTangleInjectorModuleClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.mergeComponentTangleInjectorModuleClassName"]},{"name":"val mergeSubcomponent: ClassName","description":"tangle.inject.compiler.ClassNames.mergeSubcomponent","location":"tangle-compiler/tangle.inject.compiler/-class-names/merge-subcomponent.html","searchKeys":["mergeSubcomponent","val mergeSubcomponent: ClassName","tangle.inject.compiler.ClassNames.mergeSubcomponent"]},{"name":"val mergeSubcomponent: FqName","description":"tangle.inject.compiler.FqNames.mergeSubcomponent","location":"tangle-compiler/tangle.inject.compiler/-fq-names/merge-subcomponent.html","searchKeys":["mergeSubcomponent","val mergeSubcomponent: FqName","tangle.inject.compiler.FqNames.mergeSubcomponent"]},{"name":"val module: ClassName","description":"tangle.inject.compiler.ClassNames.module","location":"tangle-compiler/tangle.inject.compiler/-class-names/module.html","searchKeys":["module","val module: ClassName","tangle.inject.compiler.ClassNames.module"]},{"name":"val module: ModuleDescriptor","description":"tangle.inject.compiler.components.MergeComponentParams.module","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/module.html","searchKeys":["module","val module: ModuleDescriptor","tangle.inject.compiler.components.MergeComponentParams.module"]},{"name":"val multibinds: ClassName","description":"tangle.inject.compiler.ClassNames.multibinds","location":"tangle-compiler/tangle.inject.compiler/-class-names/multibinds.html","searchKeys":["multibinds","val multibinds: ClassName","tangle.inject.compiler.ClassNames.multibinds"]},{"name":"val named: ClassName","description":"tangle.inject.compiler.ClassNames.named","location":"tangle-compiler/tangle.inject.compiler/-class-names/named.html","searchKeys":["named","val named: ClassName","tangle.inject.compiler.ClassNames.named"]},{"name":"val originalComponentClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.originalComponentClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/original-component-class-name.html","searchKeys":["originalComponentClassName","val originalComponentClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.originalComponentClassName"]},{"name":"val packageName: String","description":"tangle.inject.compiler.components.MergeComponentParams.packageName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/package-name.html","searchKeys":["packageName","val packageName: String","tangle.inject.compiler.components.MergeComponentParams.packageName"]},{"name":"val packageName: String","description":"tangle.inject.compiler.memberInject.MemberInjectParams.packageName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/package-name.html","searchKeys":["packageName","val packageName: String","tangle.inject.compiler.memberInject.MemberInjectParams.packageName"]},{"name":"val parcelable: ClassName","description":"tangle.inject.compiler.ClassNames.parcelable","location":"tangle-compiler/tangle.inject.compiler/-class-names/parcelable.html","searchKeys":["parcelable","val parcelable: ClassName","tangle.inject.compiler.ClassNames.parcelable"]},{"name":"val parcelable: FqName","description":"tangle.inject.compiler.FqNames.parcelable","location":"tangle-compiler/tangle.inject.compiler/-fq-names/parcelable.html","searchKeys":["parcelable","val parcelable: FqName","tangle.inject.compiler.FqNames.parcelable"]},{"name":"val provider: ClassName","description":"tangle.inject.compiler.ClassNames.provider","location":"tangle-compiler/tangle.inject.compiler/-class-names/provider.html","searchKeys":["provider","val provider: ClassName","tangle.inject.compiler.ClassNames.provider"]},{"name":"val provider: FqName","description":"tangle.inject.compiler.FqNames.provider","location":"tangle-compiler/tangle.inject.compiler/-fq-names/provider.html","searchKeys":["provider","val provider: FqName","tangle.inject.compiler.FqNames.provider"]},{"name":"val providerComponentClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.providerComponentClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/provider-component-class-name.html","searchKeys":["providerComponentClassName","val providerComponentClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.providerComponentClassName"]},{"name":"val provides: ClassName","description":"tangle.inject.compiler.ClassNames.provides","location":"tangle-compiler/tangle.inject.compiler/-class-names/provides.html","searchKeys":["provides","val provides: ClassName","tangle.inject.compiler.ClassNames.provides"]},{"name":"val qualifier: FqName","description":"tangle.inject.compiler.FqNames.qualifier","location":"tangle-compiler/tangle.inject.compiler/-fq-names/qualifier.html","searchKeys":["qualifier","val qualifier: FqName","tangle.inject.compiler.FqNames.qualifier"]},{"name":"val scopeClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.scopeClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/scope-class-name.html","searchKeys":["scopeClassName","val scopeClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.scopeClassName"]},{"name":"val scopeClassName: ClassName","description":"tangle.inject.compiler.memberInject.MemberInjectParams.scopeClassName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/scope-class-name.html","searchKeys":["scopeClassName","val scopeClassName: ClassName","tangle.inject.compiler.memberInject.MemberInjectParams.scopeClassName"]},{"name":"val scopeFqName: FqName","description":"tangle.inject.compiler.components.MergeComponentParams.scopeFqName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/scope-fq-name.html","searchKeys":["scopeFqName","val scopeFqName: FqName","tangle.inject.compiler.components.MergeComponentParams.scopeFqName"]},{"name":"val scopeQualifier: AnnotationSpec","description":"tangle.inject.compiler.components.MergeComponentParams.scopeQualifier","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/scope-qualifier.html","searchKeys":["scopeQualifier","val scopeQualifier: AnnotationSpec","tangle.inject.compiler.components.MergeComponentParams.scopeQualifier"]},{"name":"val scopeToComponentModuleClassName: ClassName","description":"tangle.inject.compiler.components.MergeComponentParams.scopeToComponentModuleClassName","location":"tangle-compiler/tangle.inject.compiler.components/-merge-component-params/scope-to-component-module-class-name.html","searchKeys":["scopeToComponentModuleClassName","val scopeToComponentModuleClassName: ClassName","tangle.inject.compiler.components.MergeComponentParams.scopeToComponentModuleClassName"]},{"name":"val size: ClassName","description":"tangle.inject.compiler.ClassNames.size","location":"tangle-compiler/tangle.inject.compiler/-class-names/size.html","searchKeys":["size","val size: ClassName","tangle.inject.compiler.ClassNames.size"]},{"name":"val size: FqName","description":"tangle.inject.compiler.FqNames.size","location":"tangle-compiler/tangle.inject.compiler/-fq-names/size.html","searchKeys":["size","val size: FqName","tangle.inject.compiler.FqNames.size"]},{"name":"val sizeF: ClassName","description":"tangle.inject.compiler.ClassNames.sizeF","location":"tangle-compiler/tangle.inject.compiler/-class-names/size-f.html","searchKeys":["sizeF","val sizeF: ClassName","tangle.inject.compiler.ClassNames.sizeF"]},{"name":"val sizeF: FqName","description":"tangle.inject.compiler.FqNames.sizeF","location":"tangle-compiler/tangle.inject.compiler/-fq-names/size-f.html","searchKeys":["sizeF","val sizeF: FqName","tangle.inject.compiler.FqNames.sizeF"]},{"name":"val string: ClassName","description":"tangle.inject.compiler.ClassNames.string","location":"tangle-compiler/tangle.inject.compiler/-class-names/string.html","searchKeys":["string","val string: ClassName","tangle.inject.compiler.ClassNames.string"]},{"name":"val stringKey: ClassName","description":"tangle.inject.compiler.ClassNames.stringKey","location":"tangle-compiler/tangle.inject.compiler/-class-names/string-key.html","searchKeys":["stringKey","val stringKey: ClassName","tangle.inject.compiler.ClassNames.stringKey"]},{"name":"val subcomponentFactory: ClassName","description":"tangle.inject.compiler.ClassNames.subcomponentFactory","location":"tangle-compiler/tangle.inject.compiler/-class-names/subcomponent-factory.html","searchKeys":["subcomponentFactory","val subcomponentFactory: ClassName","tangle.inject.compiler.ClassNames.subcomponentFactory"]},{"name":"val tangleAppScope: ClassName","description":"tangle.inject.compiler.ClassNames.tangleAppScope","location":"tangle-compiler/tangle.inject.compiler/-class-names/tangle-app-scope.html","searchKeys":["tangleAppScope","val tangleAppScope: ClassName","tangle.inject.compiler.ClassNames.tangleAppScope"]},{"name":"val tangleAppScope: FqName","description":"tangle.inject.compiler.FqNames.tangleAppScope","location":"tangle-compiler/tangle.inject.compiler/-fq-names/tangle-app-scope.html","searchKeys":["tangleAppScope","val tangleAppScope: FqName","tangle.inject.compiler.FqNames.tangleAppScope"]},{"name":"val tangleAppScopeModuleClassName: ClassName","description":"tangle.inject.compiler.memberInject.MemberInjectParams.tangleAppScopeModuleClassName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/tangle-app-scope-module-class-name.html","searchKeys":["tangleAppScopeModuleClassName","val tangleAppScopeModuleClassName: ClassName","tangle.inject.compiler.memberInject.MemberInjectParams.tangleAppScopeModuleClassName"]},{"name":"val tangleParam: FqName","description":"tangle.inject.compiler.FqNames.tangleParam","location":"tangle-compiler/tangle.inject.compiler/-fq-names/tangle-param.html","searchKeys":["tangleParam","val tangleParam: FqName","tangle.inject.compiler.FqNames.tangleParam"]},{"name":"val tangleScope: ClassName","description":"tangle.inject.compiler.ClassNames.tangleScope","location":"tangle-compiler/tangle.inject.compiler/-class-names/tangle-scope.html","searchKeys":["tangleScope","val tangleScope: ClassName","tangle.inject.compiler.ClassNames.tangleScope"]},{"name":"val tangleScope: FqName","description":"tangle.inject.compiler.FqNames.tangleScope","location":"tangle-compiler/tangle.inject.compiler/-fq-names/tangle-scope.html","searchKeys":["tangleScope","val tangleScope: FqName","tangle.inject.compiler.FqNames.tangleScope"]},{"name":"val tangleViewModelScope: FqName","description":"tangle.inject.compiler.FqNames.tangleViewModelScope","location":"tangle-compiler/tangle.inject.compiler/-fq-names/tangle-view-model-scope.html","searchKeys":["tangleViewModelScope","val tangleViewModelScope: FqName","tangle.inject.compiler.FqNames.tangleViewModelScope"]},{"name":"val tangleWorker: FqName","description":"tangle.inject.compiler.FqNames.tangleWorker","location":"tangle-compiler/tangle.inject.compiler/-fq-names/tangle-worker.html","searchKeys":["tangleWorker","val tangleWorker: FqName","tangle.inject.compiler.FqNames.tangleWorker"]},{"name":"val userScopeModuleClassName: ClassName","description":"tangle.inject.compiler.memberInject.MemberInjectParams.userScopeModuleClassName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/user-scope-module-class-name.html","searchKeys":["userScopeModuleClassName","val userScopeModuleClassName: ClassName","tangle.inject.compiler.memberInject.MemberInjectParams.userScopeModuleClassName"]},{"name":"val userScopeModuleName: String","description":"tangle.inject.compiler.memberInject.MemberInjectParams.userScopeModuleName","location":"tangle-compiler/tangle.inject.compiler.memberInject/-member-inject-params/user-scope-module-name.html","searchKeys":["userScopeModuleName","val userScopeModuleName: String","tangle.inject.compiler.memberInject.MemberInjectParams.userScopeModuleName"]},{"name":"val vmInject: FqName","description":"tangle.inject.compiler.FqNames.vmInject","location":"tangle-compiler/tangle.inject.compiler/-fq-names/vm-inject.html","searchKeys":["vmInject","val vmInject: FqName","tangle.inject.compiler.FqNames.vmInject"]},{"name":"val vmInjectFactory: FqName","description":"tangle.inject.compiler.FqNames.vmInjectFactory","location":"tangle-compiler/tangle.inject.compiler/-fq-names/vm-inject-factory.html","searchKeys":["vmInjectFactory","val vmInjectFactory: FqName","tangle.inject.compiler.FqNames.vmInjectFactory"]},{"name":"val workerParameters: FqName","description":"tangle.inject.compiler.FqNames.workerParameters","location":"tangle-compiler/tangle.inject.compiler/-fq-names/worker-parameters.html","searchKeys":["workerParameters","val workerParameters: FqName","tangle.inject.compiler.FqNames.workerParameters"]},{"name":"inline fun <VM : ViewModel> tangleViewModel(viewModelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n    \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n  }): VM","description":"tangle.inject.compose.tangleViewModel","location":"tangle-viewmodel-compose/tangle.inject.compose/tangle-view-model.html","searchKeys":["tangleViewModel","inline fun <VM : ViewModel> tangleViewModel(viewModelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n    \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n  }): VM","tangle.inject.compose.tangleViewModel"]},{"name":"inline fun <VM : ViewModel> tangleViewModel(viewModelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n    \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n  }): VM","description":"tangle.viewmodel.compose.tangleViewModel","location":"tangle-viewmodel-compose/tangle.viewmodel.compose/tangle-view-model.html","searchKeys":["tangleViewModel","inline fun <VM : ViewModel> tangleViewModel(viewModelStoreOwner: ViewModelStoreOwner = checkNotNull(LocalViewModelStoreOwner.current) {\n    \"No ViewModelStoreOwner was provided via LocalViewModelStoreOwner\"\n  }): VM","tangle.viewmodel.compose.tangleViewModel"]},{"name":"abstract fun create(): TangleWorkerFactoryMapSubcomponent","description":"tangle.work.TangleWorkerFactoryMapSubcomponent.Factory.create","location":"tangle-work-api/tangle.work/-tangle-worker-factory-map-subcomponent/-factory/create.html","searchKeys":["create","abstract fun create(): TangleWorkerFactoryMapSubcomponent","tangle.work.TangleWorkerFactoryMapSubcomponent.Factory.create"]},{"name":"abstract fun create(context: Context, params: WorkerParameters): T","description":"tangle.work.AssistedWorkerFactory.create","location":"tangle-work-api/tangle.work/-assisted-worker-factory/create.html","searchKeys":["create","abstract fun create(context: Context, params: WorkerParameters): T","tangle.work.AssistedWorkerFactory.create"]},{"name":"abstract val tangleWorkerMapSubcomponentFactory: TangleWorkerFactoryMapSubcomponent.Factory","description":"tangle.work.TangleWorkerComponent.tangleWorkerMapSubcomponentFactory","location":"tangle-work-api/tangle.work/-tangle-worker-component/tangle-worker-map-subcomponent-factory.html","searchKeys":["tangleWorkerMapSubcomponentFactory","abstract val tangleWorkerMapSubcomponentFactory: TangleWorkerFactoryMapSubcomponent.Factory","tangle.work.TangleWorkerComponent.tangleWorkerMapSubcomponentFactory"]},{"name":"annotation class TangleAssistedWorkerFactoryMap","description":"tangle.work.TangleAssistedWorkerFactoryMap","location":"tangle-work-api/tangle.work/-tangle-assisted-worker-factory-map/index.html","searchKeys":["TangleAssistedWorkerFactoryMap","annotation class TangleAssistedWorkerFactoryMap","tangle.work.TangleAssistedWorkerFactoryMap"]},{"name":"annotation class TangleWorker","description":"tangle.work.TangleWorker","location":"tangle-work-api/tangle.work/-tangle-worker/index.html","searchKeys":["TangleWorker","annotation class TangleWorker","tangle.work.TangleWorker"]},{"name":"class TangleWorkerFactory : WorkerFactory","description":"tangle.work.TangleWorkerFactory","location":"tangle-work-api/tangle.work/-tangle-worker-factory/index.html","searchKeys":["TangleWorkerFactory","class TangleWorkerFactory : WorkerFactory","tangle.work.TangleWorkerFactory"]},{"name":"fun TangleAssistedWorkerFactoryMap()","description":"tangle.work.TangleAssistedWorkerFactoryMap.TangleAssistedWorkerFactoryMap","location":"tangle-work-api/tangle.work/-tangle-assisted-worker-factory-map/-tangle-assisted-worker-factory-map.html","searchKeys":["TangleAssistedWorkerFactoryMap","fun TangleAssistedWorkerFactoryMap()","tangle.work.TangleAssistedWorkerFactoryMap.TangleAssistedWorkerFactoryMap"]},{"name":"fun TangleWorker()","description":"tangle.work.TangleWorker.TangleWorker","location":"tangle-work-api/tangle.work/-tangle-worker/-tangle-worker.html","searchKeys":["TangleWorker","fun TangleWorker()","tangle.work.TangleWorker.TangleWorker"]},{"name":"fun TangleWorkerFactory()","description":"tangle.work.TangleWorkerFactory.TangleWorkerFactory","location":"tangle-work-api/tangle.work/-tangle-worker-factory/-tangle-worker-factory.html","searchKeys":["TangleWorkerFactory","fun TangleWorkerFactory()","tangle.work.TangleWorkerFactory.TangleWorkerFactory"]},{"name":"fun interface AssistedWorkerFactory<T : ListenableWorker>","description":"tangle.work.AssistedWorkerFactory","location":"tangle-work-api/tangle.work/-assisted-worker-factory/index.html","searchKeys":["AssistedWorkerFactory","fun interface AssistedWorkerFactory<T : ListenableWorker>","tangle.work.AssistedWorkerFactory"]},{"name":"interface Factory","description":"tangle.work.TangleWorkerFactoryMapSubcomponent.Factory","location":"tangle-work-api/tangle.work/-tangle-worker-factory-map-subcomponent/-factory/index.html","searchKeys":["Factory","interface Factory","tangle.work.TangleWorkerFactoryMapSubcomponent.Factory"]},{"name":"interface TangleWorkerComponent","description":"tangle.work.TangleWorkerComponent","location":"tangle-work-api/tangle.work/-tangle-worker-component/index.html","searchKeys":["TangleWorkerComponent","interface TangleWorkerComponent","tangle.work.TangleWorkerComponent"]},{"name":"interface TangleWorkerFactoryMapSubcomponent","description":"tangle.work.TangleWorkerFactoryMapSubcomponent","location":"tangle-work-api/tangle.work/-tangle-worker-factory-map-subcomponent/index.html","searchKeys":["TangleWorkerFactoryMapSubcomponent","interface TangleWorkerFactoryMapSubcomponent","tangle.work.TangleWorkerFactoryMapSubcomponent"]},{"name":"open override fun createWorker(appContext: Context, workerClassName: String, workerParameters: WorkerParameters): ListenableWorker?","description":"tangle.work.TangleWorkerFactory.createWorker","location":"tangle-work-api/tangle.work/-tangle-worker-factory/create-worker.html","searchKeys":["createWorker","open override fun createWorker(appContext: Context, workerClassName: String, workerParameters: WorkerParameters): ListenableWorker?","tangle.work.TangleWorkerFactory.createWorker"]},{"name":"abstract class TangleViewModelScope","description":"tangle.viewmodel.internal.TangleViewModelScope","location":"tangle-viewmodel-api/tangle.viewmodel.internal/-tangle-view-model-scope/index.html","searchKeys":["TangleViewModelScope","abstract class TangleViewModelScope","tangle.viewmodel.internal.TangleViewModelScope"]},{"name":"abstract val tangleViewModelKeysSubcomponentFactory: TangleViewModelKeysSubcomponent.Factory","description":"tangle.viewmodel.TangleViewModelComponent.tangleViewModelKeysSubcomponentFactory","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-component/tangle-view-model-keys-subcomponent-factory.html","searchKeys":["tangleViewModelKeysSubcomponentFactory","abstract val tangleViewModelKeysSubcomponentFactory: TangleViewModelKeysSubcomponent.Factory","tangle.viewmodel.TangleViewModelComponent.tangleViewModelKeysSubcomponentFactory"]},{"name":"abstract val tangleViewModelMapSubcomponentFactory: TangleViewModelMapSubcomponent.Factory","description":"tangle.viewmodel.TangleViewModelComponent.tangleViewModelMapSubcomponentFactory","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-component/tangle-view-model-map-subcomponent-factory.html","searchKeys":["tangleViewModelMapSubcomponentFactory","abstract val tangleViewModelMapSubcomponentFactory: TangleViewModelMapSubcomponent.Factory","tangle.viewmodel.TangleViewModelComponent.tangleViewModelMapSubcomponentFactory"]},{"name":"abstract val viewModelKeys: Set<Class<out ViewModel>>","description":"tangle.viewmodel.TangleViewModelKeysSubcomponent.viewModelKeys","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-keys-subcomponent/view-model-keys.html","searchKeys":["viewModelKeys","abstract val viewModelKeys: Set<Class<out ViewModel>>","tangle.viewmodel.TangleViewModelKeysSubcomponent.viewModelKeys"]},{"name":"annotation class KeySet","description":"tangle.viewmodel.TangleViewModelProviderMap.KeySet","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-provider-map/-key-set/index.html","searchKeys":["KeySet","annotation class KeySet","tangle.viewmodel.TangleViewModelProviderMap.KeySet"]},{"name":"annotation class TangleViewModelProviderMap","description":"tangle.viewmodel.TangleViewModelProviderMap","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-provider-map/index.html","searchKeys":["TangleViewModelProviderMap","annotation class TangleViewModelProviderMap","tangle.viewmodel.TangleViewModelProviderMap"]},{"name":"annotation class VMInject","description":"tangle.viewmodel.VMInject","location":"tangle-viewmodel-api/tangle.viewmodel/-v-m-inject/index.html","searchKeys":["VMInject","annotation class VMInject","tangle.viewmodel.VMInject"]},{"name":"fun KeySet()","description":"tangle.viewmodel.TangleViewModelProviderMap.KeySet.KeySet","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-provider-map/-key-set/-key-set.html","searchKeys":["KeySet","fun KeySet()","tangle.viewmodel.TangleViewModelProviderMap.KeySet.KeySet"]},{"name":"fun TangleViewModelProviderMap()","description":"tangle.viewmodel.TangleViewModelProviderMap.TangleViewModelProviderMap","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-provider-map/-tangle-view-model-provider-map.html","searchKeys":["TangleViewModelProviderMap","fun TangleViewModelProviderMap()","tangle.viewmodel.TangleViewModelProviderMap.TangleViewModelProviderMap"]},{"name":"fun VMInject()","description":"tangle.viewmodel.VMInject.VMInject","location":"tangle-viewmodel-api/tangle.viewmodel/-v-m-inject/-v-m-inject.html","searchKeys":["VMInject","fun VMInject()","tangle.viewmodel.VMInject.VMInject"]},{"name":"fun init(any: Any)","description":"tangle.viewmodel.TangleGraph.init","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-graph/init.html","searchKeys":["init","fun init(any: Any)","tangle.viewmodel.TangleGraph.init"]},{"name":"interface TangleViewModelComponent","description":"tangle.viewmodel.TangleViewModelComponent","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-component/index.html","searchKeys":["TangleViewModelComponent","interface TangleViewModelComponent","tangle.viewmodel.TangleViewModelComponent"]},{"name":"interface TangleViewModelKeysSubcomponent","description":"tangle.viewmodel.TangleViewModelKeysSubcomponent","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-keys-subcomponent/index.html","searchKeys":["TangleViewModelKeysSubcomponent","interface TangleViewModelKeysSubcomponent","tangle.viewmodel.TangleViewModelKeysSubcomponent"]},{"name":"interface TangleViewModelMapSubcomponent","description":"tangle.viewmodel.TangleViewModelMapSubcomponent","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-view-model-map-subcomponent/index.html","searchKeys":["TangleViewModelMapSubcomponent","interface TangleViewModelMapSubcomponent","tangle.viewmodel.TangleViewModelMapSubcomponent"]},{"name":"object TangleGraph","description":"tangle.viewmodel.TangleGraph","location":"tangle-viewmodel-api/tangle.viewmodel/-tangle-graph/index.html","searchKeys":["TangleGraph","object TangleGraph","tangle.viewmodel.TangleGraph"]}]
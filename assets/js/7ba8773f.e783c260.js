"use strict";(self.webpackChunktangle=self.webpackChunktangle||[]).push([[595],{7610:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"0.15.1","label":"0.15.1","banner":null,"badge":true,"noIndex":false,"className":"docs-version-0.15.1","isLast":true,"docsSidebars":{"Docs":[{"type":"link","label":"Configuration","href":"/Tangle/docs/configuration","docId":"configuration"},{"type":"link","label":"Gradle Plugin","href":"/Tangle/docs/gradle-plugin","docId":"gradle-plugin"},{"type":"link","label":"Extending Anvil","href":"/Tangle/docs/extending-anvil","docId":"extending-anvil"},{"type":"link","label":"Benchmarks","href":"/Tangle/docs/benchmarks","docId":"benchmarks"},{"type":"link","label":"Member Injection","href":"/Tangle/docs/member-injection","docId":"member-injection"},{"type":"category","label":"ViewModels","collapsed":false,"items":[{"type":"link","label":"ViewModels","href":"/Tangle/docs/viewModels/","docId":"viewModels/viewModels"},{"type":"link","label":"SavedStateHandle Injection","href":"/Tangle/docs/viewModels/savedStateHandle","docId":"viewModels/savedStateHandle"},{"type":"link","label":"Compose","href":"/Tangle/docs/viewModels/compose","docId":"viewModels/compose"}],"collapsible":true},{"type":"category","label":"Fragments","collapsed":false,"items":[{"type":"link","label":"Fragments","href":"/Tangle/docs/fragments/","docId":"fragments/fragments"},{"type":"link","label":"Bundle Injection","href":"/Tangle/docs/fragments/bundles","docId":"fragments/bundles"}],"collapsible":true},{"type":"category","label":"WorkManager","collapsed":false,"items":[{"type":"link","label":"Worker","href":"/Tangle/docs/workManager/","docId":"workManager/workManager"}],"collapsible":true}]},"docs":{"benchmarks":{"id":"benchmarks","title":"Benchmarks","description":"The Tangle project has the ability to generate test projects and run synthetic benchmarks against","sidebar":"Docs"},"configuration":{"id":"configuration","title":"Configuration","description":"Gradle","sidebar":"Docs"},"extending-anvil":{"id":"extending-anvil","title":"Extending Anvil","description":"[Anvil] is a Kotlin compiler plugin which simplifies how we use [Dagger]. Anvil\'s documentation is","sidebar":"Docs"},"fragments/bundles":{"id":"fragments/bundles","title":"Bundle Injection","description":"The goal","sidebar":"Docs"},"fragments/fragments":{"id":"fragments/fragments","title":"Fragments","description":"Tangle performs Fragment injection using constructor injection, just like the rest of a","sidebar":"Docs"},"gradle-plugin":{"id":"gradle-plugin","title":"Gradle Plugin","description":"The simplest way to apply Tangle is via the Gradle plugin.","sidebar":"Docs"},"member-injection":{"id":"member-injection","title":"Member Injection","description":"The Android framework has a number of classes which are initialized automatically for us:","sidebar":"Docs"},"viewModels/compose":{"id":"viewModels/compose","title":"Compose","description":"Tangle supports ViewModel \\"injection\\" in composables in a manner very similar to Hilt\'s","sidebar":"Docs"},"viewModels/savedStateHandle":{"id":"viewModels/savedStateHandle","title":"SavedStateHandle injection","description":"When using the tangleViewModel delegate function, a scoped subcomponent is created","sidebar":"Docs"},"viewModels/viewModels":{"id":"viewModels/viewModels","title":"ViewModels","description":"Once you\'ve added Tangle as a dependency, implementing [ViewModel] injection is easy.","sidebar":"Docs"},"workManager/workManager":{"id":"workManager/workManager","title":"Worker Injection","description":"Tangle is able to leverage Dagger\'s [AssistedInject] functionality to perform constructor injection","sidebar":"Docs"}}}')}}]);